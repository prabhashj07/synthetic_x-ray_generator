{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/3d-xray-generator/src/ThreeJS.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJS = ({\n  rotation,\n  tilt,\n  translation\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.y = rotation;\n      cube.rotation.x = tilt;\n      cube.position.x = translation.pushPull;\n      cube.position.y = translation.raiseLower;\n      cube.position.z = translation.footHead;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup function\n    return () => {\n      // Use a variable to store the current ref value\n      const currentRef = mountRef.current;\n      if (currentRef) {\n        currentRef.removeChild(renderer.domElement);\n      }\n    };\n  }, [rotation, tilt, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeJS, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeJS;\nexport default ThreeJS;\nvar _c;\n$RefreshReg$(_c, \"ThreeJS\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","ThreeJS","rotation","tilt","translation","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","current","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","animate","requestAnimationFrame","y","x","pushPull","raiseLower","footHead","render","currentRef","removeChild","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prabhashj07/3d-xray-generator/src/ThreeJS.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeJS = ({ rotation, tilt, translation }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      cube.rotation.y = rotation;\n      cube.rotation.x = tilt;\n\n      cube.position.x = translation.pushPull;\n      cube.position.y = translation.raiseLower;\n      cube.position.z = translation.footHead;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Cleanup function\n    return () => {\n      // Use a variable to store the current ref value\n      const currentRef = mountRef.current;\n      if (currentRef) {\n        currentRef.removeChild(renderer.domElement);\n      }\n    };\n  }, [rotation, tilt, translation]);\n\n  return <div ref={mountRef} style={{ width: '100%', height: '100%' }}></div>;\n};\n\nexport default ThreeJS;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIX,KAAK,CAACY,KAAK,CAAC,QAAQ,CAAC;IAE5C,MAAMC,MAAM,GAAG,IAAIb,KAAK,CAACc,iBAAiB,CAAC,EAAE,EAAEN,QAAQ,CAACO,OAAO,CAACC,WAAW,GAAGR,QAAQ,CAACO,OAAO,CAACE,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC;IACvHJ,MAAM,CAACK,QAAQ,CAACC,CAAC,GAAG,CAAC;IAErB,MAAMC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACd,QAAQ,CAACO,OAAO,CAACC,WAAW,EAAER,QAAQ,CAACO,OAAO,CAACE,YAAY,CAAC;IAC7ET,QAAQ,CAACO,OAAO,CAACQ,WAAW,CAACH,QAAQ,CAACI,UAAU,CAAC;IAEjD,MAAMC,QAAQ,GAAG,IAAIzB,KAAK,CAAC0B,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAI3B,KAAK,CAAC4B,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAI9B,KAAK,CAAC+B,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/ClB,KAAK,CAACuB,GAAG,CAACF,IAAI,CAAC;IAEf,MAAMG,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAE9BH,IAAI,CAAC1B,QAAQ,CAAC+B,CAAC,GAAG/B,QAAQ;MAC1B0B,IAAI,CAAC1B,QAAQ,CAACgC,CAAC,GAAG/B,IAAI;MAEtByB,IAAI,CAACZ,QAAQ,CAACkB,CAAC,GAAG9B,WAAW,CAAC+B,QAAQ;MACtCP,IAAI,CAACZ,QAAQ,CAACiB,CAAC,GAAG7B,WAAW,CAACgC,UAAU;MACxCR,IAAI,CAACZ,QAAQ,CAACC,CAAC,GAAGb,WAAW,CAACiC,QAAQ;MAEtCnB,QAAQ,CAACoB,MAAM,CAAC/B,KAAK,EAAEI,MAAM,CAAC;IAChC,CAAC;IAEDoB,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACX;MACA,MAAMQ,UAAU,GAAGjC,QAAQ,CAACO,OAAO;MACnC,IAAI0B,UAAU,EAAE;QACdA,UAAU,CAACC,WAAW,CAACtB,QAAQ,CAACI,UAAU,CAAC;MAC7C;IACF,CAAC;EACH,CAAC,EAAE,CAACpB,QAAQ,EAAEC,IAAI,EAAEC,WAAW,CAAC,CAAC;EAEjC,oBAAOJ,OAAA;IAAKyC,GAAG,EAAEnC,QAAS;IAACoC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7E,CAAC;AAAC3C,EAAA,CA7CIJ,OAAO;AAAAgD,EAAA,GAAPhD,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}