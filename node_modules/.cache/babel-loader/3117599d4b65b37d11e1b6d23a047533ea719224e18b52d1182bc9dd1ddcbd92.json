{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NIFTI2 = void 0;\nconst nifti1_1 = require(\"./nifti1\");\nconst utilities_1 = require(\"./utilities\");\n/**\n * The NIFTI2 constructor.\n * @constructor\n * @property {boolean} littleEndian\n * @property {number} dim_info\n * @property {number[]} dims - image dimensions\n * @property {number} intent_p1\n * @property {number} intent_p2\n * @property {number} intent_p3\n * @property {number} intent_code\n * @property {number} datatypeCode\n * @property {number} numBitsPerVoxel\n * @property {number} slice_start\n * @property {number} slice_end\n * @property {number} slice_code\n * @property {number[]} pixDims - voxel dimensions\n * @property {number} vox_offset\n * @property {number} scl_slope\n * @property {number} scl_inter\n * @property {number} xyzt_units\n * @property {number} cal_max\n * @property {number} cal_min\n * @property {number} slice_duration\n * @property {number} toffset\n * @property {string} description\n * @property {string} aux_file\n * @property {string} intent_name\n * @property {number} qform_code\n * @property {number} sform_code\n * @property {number} quatern_b\n * @property {number} quatern_c\n * @property {number} quatern_d\n * @property {number} quatern_x\n * @property {number} quatern_y\n * @property {number} quatern_z\n * @property {Array.<Array.<number>>} affine\n * @property {string} magic\n * @property {number[]} extensionFlag\n * @property {NIFTIEXTENSION[]} extensions\n * @type {Function}\n */\nclass NIFTI2 {\n  littleEndian = false;\n  dim_info = 0;\n  dims = [];\n  intent_p1 = 0;\n  intent_p2 = 0;\n  intent_p3 = 0;\n  intent_code = 0;\n  datatypeCode = 0;\n  numBitsPerVoxel = 0;\n  slice_start = 0;\n  slice_end = 0;\n  slice_code = 0;\n  pixDims = [];\n  vox_offset = 0;\n  scl_slope = 1;\n  scl_inter = 0;\n  xyzt_units = 0;\n  cal_max = 0;\n  cal_min = 0;\n  slice_duration = 0;\n  toffset = 0;\n  description = \"\";\n  aux_file = \"\";\n  intent_name = \"\";\n  qform_code = 0;\n  sform_code = 0;\n  quatern_b = 0;\n  quatern_c = 0;\n  quatern_d = 0;\n  qoffset_x = 0;\n  qoffset_y = 0;\n  qoffset_z = 0;\n  affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n  magic = \"0\";\n  extensionFlag = [0, 0, 0, 0];\n  extensions = [];\n  extensionSize = 0;\n  extensionCode = 0;\n  /*** Static Pseudo-constants ***/\n  static MAGIC_COOKIE = 540;\n  static MAGIC_NUMBER_LOCATION = 4;\n  static MAGIC_NUMBER = [0x6e, 0x2b, 0x32, 0, 0x0d, 0x0a, 0x1a, 0x0a]; // n+2\\0\n  static MAGIC_NUMBER2 = [0x6e, 0x69, 0x32, 0, 0x0d, 0x0a, 0x1a, 0x0a]; // ni2\\0\n  /*** Prototype Methods ***/\n  /**\n   * Reads the header data.\n   * @param {ArrayBuffer} data\n   */\n  readHeader(data) {\n    var rawData = new DataView(data),\n      magicCookieVal = utilities_1.Utils.getIntAt(rawData, 0, this.littleEndian),\n      ctr,\n      ctrOut,\n      ctrIn,\n      index,\n      array;\n    if (magicCookieVal !== NIFTI2.MAGIC_COOKIE) {\n      // try as little endian\n      this.littleEndian = true;\n      magicCookieVal = utilities_1.Utils.getIntAt(rawData, 0, this.littleEndian);\n    }\n    if (magicCookieVal !== NIFTI2.MAGIC_COOKIE) {\n      throw new Error(\"This does not appear to be a NIFTI file!\");\n    }\n    this.magic = utilities_1.Utils.getStringAt(rawData, 4, 12);\n    this.datatypeCode = utilities_1.Utils.getShortAt(rawData, 12, this.littleEndian);\n    this.numBitsPerVoxel = utilities_1.Utils.getShortAt(rawData, 14, this.littleEndian);\n    for (ctr = 0; ctr < 8; ctr += 1) {\n      index = 16 + ctr * 8;\n      this.dims[ctr] = utilities_1.Utils.getLongAt(rawData, index, this.littleEndian);\n    }\n    this.intent_p1 = utilities_1.Utils.getDoubleAt(rawData, 80, this.littleEndian);\n    this.intent_p2 = utilities_1.Utils.getDoubleAt(rawData, 88, this.littleEndian);\n    this.intent_p3 = utilities_1.Utils.getDoubleAt(rawData, 96, this.littleEndian);\n    for (ctr = 0; ctr < 8; ctr += 1) {\n      index = 104 + ctr * 8;\n      this.pixDims[ctr] = utilities_1.Utils.getDoubleAt(rawData, index, this.littleEndian);\n    }\n    this.vox_offset = utilities_1.Utils.getLongAt(rawData, 168, this.littleEndian);\n    this.scl_slope = utilities_1.Utils.getDoubleAt(rawData, 176, this.littleEndian);\n    this.scl_inter = utilities_1.Utils.getDoubleAt(rawData, 184, this.littleEndian);\n    this.cal_max = utilities_1.Utils.getDoubleAt(rawData, 192, this.littleEndian);\n    this.cal_min = utilities_1.Utils.getDoubleAt(rawData, 200, this.littleEndian);\n    this.slice_duration = utilities_1.Utils.getDoubleAt(rawData, 208, this.littleEndian);\n    this.toffset = utilities_1.Utils.getDoubleAt(rawData, 216, this.littleEndian);\n    this.slice_start = utilities_1.Utils.getLongAt(rawData, 224, this.littleEndian);\n    this.slice_end = utilities_1.Utils.getLongAt(rawData, 232, this.littleEndian);\n    this.description = utilities_1.Utils.getStringAt(rawData, 240, 240 + 80);\n    this.aux_file = utilities_1.Utils.getStringAt(rawData, 320, 320 + 24);\n    this.qform_code = utilities_1.Utils.getIntAt(rawData, 344, this.littleEndian);\n    this.sform_code = utilities_1.Utils.getIntAt(rawData, 348, this.littleEndian);\n    this.quatern_b = utilities_1.Utils.getDoubleAt(rawData, 352, this.littleEndian);\n    this.quatern_c = utilities_1.Utils.getDoubleAt(rawData, 360, this.littleEndian);\n    this.quatern_d = utilities_1.Utils.getDoubleAt(rawData, 368, this.littleEndian);\n    this.qoffset_x = utilities_1.Utils.getDoubleAt(rawData, 376, this.littleEndian);\n    this.qoffset_y = utilities_1.Utils.getDoubleAt(rawData, 384, this.littleEndian);\n    this.qoffset_z = utilities_1.Utils.getDoubleAt(rawData, 392, this.littleEndian);\n    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n      for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {\n        index = 400 + (ctrOut * 4 + ctrIn) * 8;\n        this.affine[ctrOut][ctrIn] = utilities_1.Utils.getDoubleAt(rawData, index, this.littleEndian);\n      }\n    }\n    this.affine[3][0] = 0;\n    this.affine[3][1] = 0;\n    this.affine[3][2] = 0;\n    this.affine[3][3] = 1;\n    this.slice_code = utilities_1.Utils.getIntAt(rawData, 496, this.littleEndian);\n    this.xyzt_units = utilities_1.Utils.getIntAt(rawData, 500, this.littleEndian);\n    this.intent_code = utilities_1.Utils.getIntAt(rawData, 504, this.littleEndian);\n    this.intent_name = utilities_1.Utils.getStringAt(rawData, 508, 508 + 16);\n    this.dim_info = utilities_1.Utils.getByteAt(rawData, 524);\n    if (rawData.byteLength > NIFTI2.MAGIC_COOKIE) {\n      this.extensionFlag[0] = utilities_1.Utils.getByteAt(rawData, 540);\n      this.extensionFlag[1] = utilities_1.Utils.getByteAt(rawData, 540 + 1);\n      this.extensionFlag[2] = utilities_1.Utils.getByteAt(rawData, 540 + 2);\n      this.extensionFlag[3] = utilities_1.Utils.getByteAt(rawData, 540 + 3);\n      if (this.extensionFlag[0]) {\n        // read our extensions\n        this.extensions = utilities_1.Utils.getExtensionsAt(rawData, this.getExtensionLocation(), this.littleEndian, this.vox_offset);\n        // set the extensionSize and extensionCode from the first extension found\n        this.extensionSize = this.extensions[0].esize;\n        this.extensionCode = this.extensions[0].ecode;\n      }\n    }\n  }\n  /**\n   * Returns a formatted string of header fields.\n   * @returns {string}\n   */\n  toFormattedString() {\n    var fmt = utilities_1.Utils.formatNumber,\n      string = \"\";\n    string += \"Datatype = \" + +this.datatypeCode + \" (\" + this.getDatatypeCodeString(this.datatypeCode) + \")\\n\";\n    string += \"Bits Per Voxel = \" + \" = \" + this.numBitsPerVoxel + \"\\n\";\n    string += \"Image Dimensions\" + \" (1-8): \" + this.dims[0] + \", \" + this.dims[1] + \", \" + this.dims[2] + \", \" + this.dims[3] + \", \" + this.dims[4] + \", \" + this.dims[5] + \", \" + this.dims[6] + \", \" + this.dims[7] + \"\\n\";\n    string += \"Intent Parameters (1-3): \" + this.intent_p1 + \", \" + this.intent_p2 + \", \" + this.intent_p3 + \"\\n\";\n    string += \"Voxel Dimensions (1-8): \" + fmt(this.pixDims[0]) + \", \" + fmt(this.pixDims[1]) + \", \" + fmt(this.pixDims[2]) + \", \" + fmt(this.pixDims[3]) + \", \" + fmt(this.pixDims[4]) + \", \" + fmt(this.pixDims[5]) + \", \" + fmt(this.pixDims[6]) + \", \" + fmt(this.pixDims[7]) + \"\\n\";\n    string += \"Image Offset = \" + this.vox_offset + \"\\n\";\n    string += \"Data Scale:  Slope = \" + fmt(this.scl_slope) + \"  Intercept = \" + fmt(this.scl_inter) + \"\\n\";\n    string += \"Display Range:  Max = \" + fmt(this.cal_max) + \"  Min = \" + fmt(this.cal_min) + \"\\n\";\n    string += \"Slice Duration = \" + this.slice_duration + \"\\n\";\n    string += \"Time Axis Shift = \" + this.toffset + \"\\n\";\n    string += \"Slice Start = \" + this.slice_start + \"\\n\";\n    string += \"Slice End = \" + this.slice_end + \"\\n\";\n    string += 'Description: \"' + this.description + '\"\\n';\n    string += 'Auxiliary File: \"' + this.aux_file + '\"\\n';\n    string += \"Q-Form Code = \" + this.qform_code + \" (\" + this.getTransformCodeString(this.qform_code) + \")\\n\";\n    string += \"S-Form Code = \" + this.sform_code + \" (\" + this.getTransformCodeString(this.sform_code) + \")\\n\";\n    string += \"Quaternion Parameters:  \" + \"b = \" + fmt(this.quatern_b) + \"  \" + \"c = \" + fmt(this.quatern_c) + \"  \" + \"d = \" + fmt(this.quatern_d) + \"\\n\";\n    string += \"Quaternion Offsets:  \" + \"x = \" + this.qoffset_x + \"  \" + \"y = \" + this.qoffset_y + \"  \" + \"z = \" + this.qoffset_z + \"\\n\";\n    string += \"S-Form Parameters X: \" + fmt(this.affine[0][0]) + \", \" + fmt(this.affine[0][1]) + \", \" + fmt(this.affine[0][2]) + \", \" + fmt(this.affine[0][3]) + \"\\n\";\n    string += \"S-Form Parameters Y: \" + fmt(this.affine[1][0]) + \", \" + fmt(this.affine[1][1]) + \", \" + fmt(this.affine[1][2]) + \", \" + fmt(this.affine[1][3]) + \"\\n\";\n    string += \"S-Form Parameters Z: \" + fmt(this.affine[2][0]) + \", \" + fmt(this.affine[2][1]) + \", \" + fmt(this.affine[2][2]) + \", \" + fmt(this.affine[2][3]) + \"\\n\";\n    string += \"Slice Code = \" + this.slice_code + \"\\n\";\n    string += \"Units Code = \" + this.xyzt_units + \" (\" + this.getUnitsCodeString(nifti1_1.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + \", \" + this.getUnitsCodeString(nifti1_1.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + \")\\n\";\n    string += \"Intent Code = \" + this.intent_code + \"\\n\";\n    string += 'Intent Name: \"' + this.intent_name + '\"\\n';\n    string += \"Dim Info = \" + this.dim_info + \"\\n\";\n    return string;\n  }\n  /**\n   * Returns the byte index of the extension.\n   * @returns {number}\n   */\n  getExtensionLocation = function () {\n    return NIFTI2.MAGIC_COOKIE + 4;\n  };\n  /**\n   * Returns the extension size.\n   * @param {DataView} data\n   * @returns {number}\n   */\n  getExtensionSize = nifti1_1.NIFTI1.prototype.getExtensionSize;\n  /**\n   * Returns the extension code.\n   * @param {DataView} data\n   * @returns {number}\n   */\n  getExtensionCode = nifti1_1.NIFTI1.prototype.getExtensionCode;\n  /**\n   * Adds an extension\n   * @param {NIFTIEXTENSION} extension\n   * @param {number} index\n   */\n  addExtension = nifti1_1.NIFTI1.prototype.addExtension;\n  /**\n   * Removes an extension\n   * @param {number} index\n   */\n  removeExtension = nifti1_1.NIFTI1.prototype.removeExtension;\n  /**\n   * Returns a human-readable string of datatype.\n   * @param {number} code\n   * @returns {string}\n   */\n  getDatatypeCodeString = nifti1_1.NIFTI1.prototype.getDatatypeCodeString;\n  /**\n   * Returns a human-readable string of transform type.\n   * @param {number} code\n   * @returns {string}\n   */\n  getTransformCodeString = nifti1_1.NIFTI1.prototype.getTransformCodeString;\n  /**\n   * Returns a human-readable string of spatial and temporal units.\n   * @param {number} code\n   * @returns {string}\n   */\n  getUnitsCodeString = nifti1_1.NIFTI1.prototype.getUnitsCodeString;\n  /**\n   * Returns the qform matrix.\n   * @returns {Array.<Array.<number>>}\n   */\n  getQformMat = nifti1_1.NIFTI1.prototype.getQformMat;\n  /**\n   * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n   * @param {number} qb\n   * @param {number} qc\n   * @param {number} qd\n   * @param {number} qx\n   * @param {number} qy\n   * @param {number} qz\n   * @param {number} dx\n   * @param {number} dy\n   * @param {number} dz\n   * @param {number} qfac\n   * @returns {Array.<Array.<number>>}\n   */\n  convertNiftiQFormToNiftiSForm = nifti1_1.NIFTI1.prototype.convertNiftiQFormToNiftiSForm;\n  /**\n   * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n   * @param {Array.<Array.<number>>} R\n   * @returns {string}\n   */\n  convertNiftiSFormToNEMA = nifti1_1.NIFTI1.prototype.convertNiftiSFormToNEMA;\n  nifti_mat33_mul = nifti1_1.NIFTI1.prototype.nifti_mat33_mul;\n  nifti_mat33_determ = nifti1_1.NIFTI1.prototype.nifti_mat33_determ;\n  /**\n   * Returns header as ArrayBuffer.\n   * @param {boolean} includeExtensions - should extension bytes be included\n   * @returns {ArrayBuffer}\n   */\n  toArrayBuffer(includeExtensions = false) {\n    const INT64_SIZE = 8;\n    const DOUBLE_SIZE = 8;\n    let byteSize = 540 + 4; // +4 for extension bytes\n    // calculate necessary size\n    if (includeExtensions) {\n      for (let extension of this.extensions) {\n        byteSize += extension.esize;\n      }\n    }\n    let byteArray = new Uint8Array(byteSize);\n    let view = new DataView(byteArray.buffer);\n    // sizeof_hdr\n    view.setInt32(0, 540, this.littleEndian);\n    // magic\n    byteArray.set(Buffer.from(this.magic), 4);\n    // datatype\n    view.setInt16(12, this.datatypeCode, this.littleEndian);\n    // bitpix\n    view.setInt16(14, this.numBitsPerVoxel, this.littleEndian);\n    // dim[8]\n    for (let i = 0; i < 8; i++) {\n      view.setBigInt64(16 + INT64_SIZE * i, BigInt(this.dims[i]), this.littleEndian);\n    }\n    // intent_p1\n    view.setFloat64(80, this.intent_p1, this.littleEndian);\n    // intent_p2\n    view.setFloat64(88, this.intent_p2, this.littleEndian);\n    // intent_p3\n    view.setFloat64(96, this.intent_p3, this.littleEndian);\n    // pixdim\n    for (let i = 0; i < 8; i++) {\n      view.setFloat64(104 + DOUBLE_SIZE * i, this.pixDims[i], this.littleEndian);\n    }\n    // vox_offset\n    view.setBigInt64(168, BigInt(this.vox_offset), this.littleEndian);\n    // scl_slope\n    view.setFloat64(176, this.scl_slope, this.littleEndian);\n    // scl_inter\n    view.setFloat64(184, this.scl_inter, this.littleEndian);\n    // cal_max\n    view.setFloat64(192, this.cal_max, this.littleEndian);\n    // cal_min\n    view.setFloat64(200, this.cal_min, this.littleEndian);\n    // slice_duration\n    view.setFloat64(208, this.slice_duration, this.littleEndian);\n    // toffset\n    view.setFloat64(216, this.toffset, this.littleEndian);\n    // slice_start\n    view.setBigInt64(224, BigInt(this.slice_start), this.littleEndian);\n    // slice end\n    view.setBigInt64(232, BigInt(this.slice_end), this.littleEndian);\n    // descrip\n    byteArray.set(Buffer.from(this.description), 240);\n    // aux_file\n    byteArray.set(Buffer.from(this.aux_file), 320);\n    // qform_code\n    view.setInt32(344, this.qform_code, this.littleEndian);\n    // sform_code\n    view.setInt32(348, this.sform_code, this.littleEndian);\n    // quatern_b\n    view.setFloat64(352, this.quatern_b, this.littleEndian);\n    // quatern_c\n    view.setFloat64(360, this.quatern_c, this.littleEndian);\n    // quatern_d\n    view.setFloat64(368, this.quatern_d, this.littleEndian);\n    // qoffset_x\n    view.setFloat64(376, this.qoffset_x, this.littleEndian);\n    // qoffset_y\n    view.setFloat64(384, this.qoffset_y, this.littleEndian);\n    // qoffset_z\n    view.setFloat64(392, this.qoffset_z, this.littleEndian);\n    // srow_x[4], srow_y[4], and srow_z[4]\n    const flattened = this.affine.flat();\n    // we only want the first three rows\n    for (let i = 0; i < 12; i++) {\n      view.setFloat64(400 + DOUBLE_SIZE * i, flattened[i], this.littleEndian);\n    }\n    // slice_code\n    view.setInt32(496, this.slice_code, this.littleEndian);\n    //  xyzt_units\n    view.setInt32(500, this.xyzt_units, this.littleEndian);\n    //  intent_code\n    view.setInt32(504, this.intent_code, this.littleEndian);\n    //  intent_name\n    byteArray.set(Buffer.from(this.intent_name), 508);\n    // dim_info\n    view.setUint8(524, this.dim_info);\n    // add our extension data\n    if (includeExtensions) {\n      byteArray.set(Uint8Array.from([1, 0, 0, 0]), 540);\n      let extensionByteIndex = this.getExtensionLocation();\n      for (const extension of this.extensions) {\n        view.setInt32(extensionByteIndex, extension.esize, extension.littleEndian);\n        view.setInt32(extensionByteIndex + 4, extension.ecode, extension.littleEndian);\n        byteArray.set(new Uint8Array(extension.edata), extensionByteIndex + 8);\n        extensionByteIndex += extension.esize;\n      }\n    } else {\n      // In a .nii file, these 4 bytes will always be present\n      byteArray.set(new Uint8Array(4).fill(0), 540);\n    }\n    return byteArray.buffer;\n  }\n}\nexports.NIFTI2 = NIFTI2;","map":{"version":3,"names":["nifti1_1","require","utilities_1","NIFTI2","littleEndian","dim_info","dims","intent_p1","intent_p2","intent_p3","intent_code","datatypeCode","numBitsPerVoxel","slice_start","slice_end","slice_code","pixDims","vox_offset","scl_slope","scl_inter","xyzt_units","cal_max","cal_min","slice_duration","toffset","description","aux_file","intent_name","qform_code","sform_code","quatern_b","quatern_c","quatern_d","qoffset_x","qoffset_y","qoffset_z","affine","magic","extensionFlag","extensions","extensionSize","extensionCode","MAGIC_COOKIE","MAGIC_NUMBER_LOCATION","MAGIC_NUMBER","MAGIC_NUMBER2","readHeader","data","rawData","DataView","magicCookieVal","Utils","getIntAt","ctr","ctrOut","ctrIn","index","array","Error","getStringAt","getShortAt","getLongAt","getDoubleAt","getByteAt","byteLength","getExtensionsAt","getExtensionLocation","esize","ecode","toFormattedString","fmt","formatNumber","string","getDatatypeCodeString","getTransformCodeString","getUnitsCodeString","NIFTI1","SPATIAL_UNITS_MASK","TEMPORAL_UNITS_MASK","getExtensionSize","prototype","getExtensionCode","addExtension","removeExtension","getQformMat","convertNiftiQFormToNiftiSForm","convertNiftiSFormToNEMA","nifti_mat33_mul","nifti_mat33_determ","toArrayBuffer","includeExtensions","INT64_SIZE","DOUBLE_SIZE","byteSize","extension","byteArray","Uint8Array","view","buffer","setInt32","set","Buffer","from","setInt16","i","setBigInt64","BigInt","setFloat64","flattened","flat","setUint8","extensionByteIndex","edata","fill","exports"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/node_modules/nifti-reader-js/src/nifti2.ts"],"sourcesContent":["import { NIFTIEXTENSION } from \"./nifti-extension\";\nimport { NIFTI1 } from \"./nifti1\";\nimport { Utils } from \"./utilities\";\n\n/**\n * The NIFTI2 constructor.\n * @constructor\n * @property {boolean} littleEndian\n * @property {number} dim_info\n * @property {number[]} dims - image dimensions\n * @property {number} intent_p1\n * @property {number} intent_p2\n * @property {number} intent_p3\n * @property {number} intent_code\n * @property {number} datatypeCode\n * @property {number} numBitsPerVoxel\n * @property {number} slice_start\n * @property {number} slice_end\n * @property {number} slice_code\n * @property {number[]} pixDims - voxel dimensions\n * @property {number} vox_offset\n * @property {number} scl_slope\n * @property {number} scl_inter\n * @property {number} xyzt_units\n * @property {number} cal_max\n * @property {number} cal_min\n * @property {number} slice_duration\n * @property {number} toffset\n * @property {string} description\n * @property {string} aux_file\n * @property {string} intent_name\n * @property {number} qform_code\n * @property {number} sform_code\n * @property {number} quatern_b\n * @property {number} quatern_c\n * @property {number} quatern_d\n * @property {number} quatern_x\n * @property {number} quatern_y\n * @property {number} quatern_z\n * @property {Array.<Array.<number>>} affine\n * @property {string} magic\n * @property {number[]} extensionFlag\n * @property {NIFTIEXTENSION[]} extensions\n * @type {Function}\n */\nexport class NIFTI2 {\n  littleEndian = false;\n  dim_info = 0;\n  dims: number[] = [];\n  intent_p1 = 0;\n  intent_p2 = 0;\n  intent_p3 = 0;\n  intent_code = 0;\n  datatypeCode = 0;\n  numBitsPerVoxel = 0;\n  slice_start = 0;\n  slice_end = 0;\n  slice_code = 0;\n  pixDims: number[] = [];\n  vox_offset = 0;\n  scl_slope = 1;\n  scl_inter = 0;\n  xyzt_units = 0;\n  cal_max = 0;\n  cal_min = 0;\n  slice_duration = 0;\n  toffset = 0;\n  description = \"\";\n  aux_file = \"\";\n  intent_name = \"\";\n  qform_code = 0;\n  sform_code = 0;\n  quatern_b = 0;\n  quatern_c = 0;\n  quatern_d = 0;\n  qoffset_x = 0;\n  qoffset_y = 0;\n  qoffset_z = 0;\n  affine = [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1],\n  ];\n  magic = \"0\";\n  extensionFlag = [0, 0, 0, 0];\n  extensions: NIFTIEXTENSION[] = [];\n  extensionSize = 0;\n  extensionCode = 0;\n\n  /*** Static Pseudo-constants ***/\n\n  public static readonly MAGIC_COOKIE = 540;\n  public static readonly MAGIC_NUMBER_LOCATION = 4;\n  public static readonly MAGIC_NUMBER = [\n    0x6e, 0x2b, 0x32, 0, 0x0d, 0x0a, 0x1a, 0x0a,\n  ]; // n+2\\0\n  public static readonly MAGIC_NUMBER2 = [\n    0x6e, 0x69, 0x32, 0, 0x0d, 0x0a, 0x1a, 0x0a,\n  ]; // ni2\\0\n\n  /*** Prototype Methods ***/\n\n  /**\n   * Reads the header data.\n   * @param {ArrayBuffer} data\n   */\n  readHeader(data: ArrayBuffer) {\n    var rawData = new DataView(data),\n      magicCookieVal = Utils.getIntAt(rawData, 0, this.littleEndian),\n      ctr,\n      ctrOut,\n      ctrIn,\n      index,\n      array;\n\n    if (magicCookieVal !== NIFTI2.MAGIC_COOKIE) {\n      // try as little endian\n      this.littleEndian = true;\n      magicCookieVal = Utils.getIntAt(rawData, 0, this.littleEndian);\n    }\n\n    if (magicCookieVal !== NIFTI2.MAGIC_COOKIE) {\n      throw new Error(\"This does not appear to be a NIFTI file!\");\n    }\n    this.magic = Utils.getStringAt(rawData, 4, 12);\n    this.datatypeCode = Utils.getShortAt(rawData, 12, this.littleEndian);\n    this.numBitsPerVoxel = Utils.getShortAt(rawData, 14, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n      index = 16 + ctr * 8;\n      this.dims[ctr] = Utils.getLongAt(rawData, index, this.littleEndian);\n    }\n\n    this.intent_p1 = Utils.getDoubleAt(rawData, 80, this.littleEndian);\n    this.intent_p2 = Utils.getDoubleAt(rawData, 88, this.littleEndian);\n    this.intent_p3 = Utils.getDoubleAt(rawData, 96, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n      index = 104 + ctr * 8;\n      this.pixDims[ctr] = Utils.getDoubleAt(rawData, index, this.littleEndian);\n    }\n\n    this.vox_offset = Utils.getLongAt(rawData, 168, this.littleEndian);\n\n    this.scl_slope = Utils.getDoubleAt(rawData, 176, this.littleEndian);\n    this.scl_inter = Utils.getDoubleAt(rawData, 184, this.littleEndian);\n\n    this.cal_max = Utils.getDoubleAt(rawData, 192, this.littleEndian);\n    this.cal_min = Utils.getDoubleAt(rawData, 200, this.littleEndian);\n\n    this.slice_duration = Utils.getDoubleAt(rawData, 208, this.littleEndian);\n\n    this.toffset = Utils.getDoubleAt(rawData, 216, this.littleEndian);\n\n    this.slice_start = Utils.getLongAt(rawData, 224, this.littleEndian);\n    this.slice_end = Utils.getLongAt(rawData, 232, this.littleEndian);\n\n    this.description = Utils.getStringAt(rawData, 240, 240 + 80);\n    this.aux_file = Utils.getStringAt(rawData, 320, 320 + 24);\n\n    this.qform_code = Utils.getIntAt(rawData, 344, this.littleEndian);\n    this.sform_code = Utils.getIntAt(rawData, 348, this.littleEndian);\n\n    this.quatern_b = Utils.getDoubleAt(rawData, 352, this.littleEndian);\n    this.quatern_c = Utils.getDoubleAt(rawData, 360, this.littleEndian);\n    this.quatern_d = Utils.getDoubleAt(rawData, 368, this.littleEndian);\n    this.qoffset_x = Utils.getDoubleAt(rawData, 376, this.littleEndian);\n    this.qoffset_y = Utils.getDoubleAt(rawData, 384, this.littleEndian);\n    this.qoffset_z = Utils.getDoubleAt(rawData, 392, this.littleEndian);\n\n    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n      for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {\n        index = 400 + (ctrOut * 4 + ctrIn) * 8;\n        this.affine[ctrOut][ctrIn] = Utils.getDoubleAt(\n          rawData,\n          index,\n          this.littleEndian\n        );\n      }\n    }\n\n    this.affine[3][0] = 0;\n    this.affine[3][1] = 0;\n    this.affine[3][2] = 0;\n    this.affine[3][3] = 1;\n\n    this.slice_code = Utils.getIntAt(rawData, 496, this.littleEndian);\n    this.xyzt_units = Utils.getIntAt(rawData, 500, this.littleEndian);\n    this.intent_code = Utils.getIntAt(rawData, 504, this.littleEndian);\n    this.intent_name = Utils.getStringAt(rawData, 508, 508 + 16);\n\n    this.dim_info = Utils.getByteAt(rawData, 524);\n\n    if (rawData.byteLength > NIFTI2.MAGIC_COOKIE) {\n      this.extensionFlag[0] = Utils.getByteAt(rawData, 540);\n      this.extensionFlag[1] = Utils.getByteAt(rawData, 540 + 1);\n      this.extensionFlag[2] = Utils.getByteAt(rawData, 540 + 2);\n      this.extensionFlag[3] = Utils.getByteAt(rawData, 540 + 3);\n\n      if (this.extensionFlag[0]) {\n        // read our extensions\n        this.extensions = Utils.getExtensionsAt(\n          rawData,\n          this.getExtensionLocation(),\n          this.littleEndian,\n          this.vox_offset\n        );\n\n        // set the extensionSize and extensionCode from the first extension found\n        this.extensionSize = this.extensions[0].esize;\n        this.extensionCode = this.extensions[0].ecode;\n      }\n    }\n  }\n\n  /**\n   * Returns a formatted string of header fields.\n   * @returns {string}\n   */\n  toFormattedString() {\n    var fmt = Utils.formatNumber,\n      string = \"\";\n\n    string +=\n      \"Datatype = \" +\n      +this.datatypeCode +\n      \" (\" +\n      this.getDatatypeCodeString(this.datatypeCode) +\n      \")\\n\";\n    string += \"Bits Per Voxel = \" + \" = \" + this.numBitsPerVoxel + \"\\n\";\n    string +=\n      \"Image Dimensions\" +\n      \" (1-8): \" +\n      this.dims[0] +\n      \", \" +\n      this.dims[1] +\n      \", \" +\n      this.dims[2] +\n      \", \" +\n      this.dims[3] +\n      \", \" +\n      this.dims[4] +\n      \", \" +\n      this.dims[5] +\n      \", \" +\n      this.dims[6] +\n      \", \" +\n      this.dims[7] +\n      \"\\n\";\n\n    string +=\n      \"Intent Parameters (1-3): \" +\n      this.intent_p1 +\n      \", \" +\n      this.intent_p2 +\n      \", \" +\n      this.intent_p3 +\n      \"\\n\";\n\n    string +=\n      \"Voxel Dimensions (1-8): \" +\n      fmt(this.pixDims[0]) +\n      \", \" +\n      fmt(this.pixDims[1]) +\n      \", \" +\n      fmt(this.pixDims[2]) +\n      \", \" +\n      fmt(this.pixDims[3]) +\n      \", \" +\n      fmt(this.pixDims[4]) +\n      \", \" +\n      fmt(this.pixDims[5]) +\n      \", \" +\n      fmt(this.pixDims[6]) +\n      \", \" +\n      fmt(this.pixDims[7]) +\n      \"\\n\";\n\n    string += \"Image Offset = \" + this.vox_offset + \"\\n\";\n    string +=\n      \"Data Scale:  Slope = \" +\n      fmt(this.scl_slope) +\n      \"  Intercept = \" +\n      fmt(this.scl_inter) +\n      \"\\n\";\n    string +=\n      \"Display Range:  Max = \" +\n      fmt(this.cal_max) +\n      \"  Min = \" +\n      fmt(this.cal_min) +\n      \"\\n\";\n    string += \"Slice Duration = \" + this.slice_duration + \"\\n\";\n    string += \"Time Axis Shift = \" + this.toffset + \"\\n\";\n    string += \"Slice Start = \" + this.slice_start + \"\\n\";\n    string += \"Slice End = \" + this.slice_end + \"\\n\";\n    string += 'Description: \"' + this.description + '\"\\n';\n    string += 'Auxiliary File: \"' + this.aux_file + '\"\\n';\n    string +=\n      \"Q-Form Code = \" +\n      this.qform_code +\n      \" (\" +\n      this.getTransformCodeString(this.qform_code) +\n      \")\\n\";\n    string +=\n      \"S-Form Code = \" +\n      this.sform_code +\n      \" (\" +\n      this.getTransformCodeString(this.sform_code) +\n      \")\\n\";\n    string +=\n      \"Quaternion Parameters:  \" +\n      \"b = \" +\n      fmt(this.quatern_b) +\n      \"  \" +\n      \"c = \" +\n      fmt(this.quatern_c) +\n      \"  \" +\n      \"d = \" +\n      fmt(this.quatern_d) +\n      \"\\n\";\n\n    string +=\n      \"Quaternion Offsets:  \" +\n      \"x = \" +\n      this.qoffset_x +\n      \"  \" +\n      \"y = \" +\n      this.qoffset_y +\n      \"  \" +\n      \"z = \" +\n      this.qoffset_z +\n      \"\\n\";\n\n    string +=\n      \"S-Form Parameters X: \" +\n      fmt(this.affine[0][0]) +\n      \", \" +\n      fmt(this.affine[0][1]) +\n      \", \" +\n      fmt(this.affine[0][2]) +\n      \", \" +\n      fmt(this.affine[0][3]) +\n      \"\\n\";\n\n    string +=\n      \"S-Form Parameters Y: \" +\n      fmt(this.affine[1][0]) +\n      \", \" +\n      fmt(this.affine[1][1]) +\n      \", \" +\n      fmt(this.affine[1][2]) +\n      \", \" +\n      fmt(this.affine[1][3]) +\n      \"\\n\";\n\n    string +=\n      \"S-Form Parameters Z: \" +\n      fmt(this.affine[2][0]) +\n      \", \" +\n      fmt(this.affine[2][1]) +\n      \", \" +\n      fmt(this.affine[2][2]) +\n      \", \" +\n      fmt(this.affine[2][3]) +\n      \"\\n\";\n\n    string += \"Slice Code = \" + this.slice_code + \"\\n\";\n    string +=\n      \"Units Code = \" +\n      this.xyzt_units +\n      \" (\" +\n      this.getUnitsCodeString(NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) +\n      \", \" +\n      this.getUnitsCodeString(NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) +\n      \")\\n\";\n    string += \"Intent Code = \" + this.intent_code + \"\\n\";\n    string += 'Intent Name: \"' + this.intent_name + '\"\\n';\n\n    string += \"Dim Info = \" + this.dim_info + \"\\n\";\n\n    return string;\n  }\n\n  /**\n   * Returns the byte index of the extension.\n   * @returns {number}\n   */\n  getExtensionLocation = function () {\n    return NIFTI2.MAGIC_COOKIE + 4;\n  };\n\n  /**\n   * Returns the extension size.\n   * @param {DataView} data\n   * @returns {number}\n   */\n  getExtensionSize = NIFTI1.prototype.getExtensionSize;\n\n  /**\n   * Returns the extension code.\n   * @param {DataView} data\n   * @returns {number}\n   */\n  getExtensionCode = NIFTI1.prototype.getExtensionCode;\n\n  /**\n   * Adds an extension\n   * @param {NIFTIEXTENSION} extension\n   * @param {number} index\n   */\n  addExtension = NIFTI1.prototype.addExtension;\n\n  /**\n   * Removes an extension\n   * @param {number} index\n   */\n  removeExtension = NIFTI1.prototype.removeExtension;\n\n  /**\n   * Returns a human-readable string of datatype.\n   * @param {number} code\n   * @returns {string}\n   */\n  getDatatypeCodeString = NIFTI1.prototype.getDatatypeCodeString;\n\n  /**\n   * Returns a human-readable string of transform type.\n   * @param {number} code\n   * @returns {string}\n   */\n  getTransformCodeString = NIFTI1.prototype.getTransformCodeString;\n\n  /**\n   * Returns a human-readable string of spatial and temporal units.\n   * @param {number} code\n   * @returns {string}\n   */\n  getUnitsCodeString = NIFTI1.prototype.getUnitsCodeString;\n\n  /**\n   * Returns the qform matrix.\n   * @returns {Array.<Array.<number>>}\n   */\n  getQformMat = NIFTI1.prototype.getQformMat;\n\n  /**\n   * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n   * @param {number} qb\n   * @param {number} qc\n   * @param {number} qd\n   * @param {number} qx\n   * @param {number} qy\n   * @param {number} qz\n   * @param {number} dx\n   * @param {number} dy\n   * @param {number} dz\n   * @param {number} qfac\n   * @returns {Array.<Array.<number>>}\n   */\n  convertNiftiQFormToNiftiSForm =\n    NIFTI1.prototype.convertNiftiQFormToNiftiSForm;\n\n  /**\n   * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n   * @param {Array.<Array.<number>>} R\n   * @returns {string}\n   */\n  convertNiftiSFormToNEMA = NIFTI1.prototype.convertNiftiSFormToNEMA;\n\n  nifti_mat33_mul = NIFTI1.prototype.nifti_mat33_mul;\n\n  nifti_mat33_determ = NIFTI1.prototype.nifti_mat33_determ;\n\n  /**\n   * Returns header as ArrayBuffer.\n   * @param {boolean} includeExtensions - should extension bytes be included\n   * @returns {ArrayBuffer}\n   */\n  toArrayBuffer(includeExtensions = false) {\n    const INT64_SIZE = 8;\n    const DOUBLE_SIZE = 8;\n\n    let byteSize = 540 + 4; // +4 for extension bytes\n    // calculate necessary size\n    if (includeExtensions) {\n      for (let extension of this.extensions) {\n        byteSize += extension.esize;\n      }\n    }\n\n    let byteArray = new Uint8Array(byteSize);\n    let view = new DataView(byteArray.buffer);\n    // sizeof_hdr\n    view.setInt32(0, 540, this.littleEndian);\n\n    // magic\n    byteArray.set(Buffer.from(this.magic), 4);\n\n    // datatype\n    view.setInt16(12, this.datatypeCode, this.littleEndian);\n\n    // bitpix\n    view.setInt16(14, this.numBitsPerVoxel, this.littleEndian);\n\n    // dim[8]\n    for (let i = 0; i < 8; i++) {\n      view.setBigInt64(\n        16 + INT64_SIZE * i,\n        BigInt(this.dims[i]),\n        this.littleEndian\n      );\n    }\n\n    // intent_p1\n    view.setFloat64(80, this.intent_p1, this.littleEndian);\n\n    // intent_p2\n    view.setFloat64(88, this.intent_p2, this.littleEndian);\n\n    // intent_p3\n    view.setFloat64(96, this.intent_p3, this.littleEndian);\n\n    // pixdim\n    for (let i = 0; i < 8; i++) {\n      view.setFloat64(\n        104 + DOUBLE_SIZE * i,\n        this.pixDims[i],\n        this.littleEndian\n      );\n    }\n\n    // vox_offset\n    view.setBigInt64(168, BigInt(this.vox_offset), this.littleEndian);\n\n    // scl_slope\n    view.setFloat64(176, this.scl_slope, this.littleEndian);\n\n    // scl_inter\n    view.setFloat64(184, this.scl_inter, this.littleEndian);\n\n    // cal_max\n    view.setFloat64(192, this.cal_max, this.littleEndian);\n\n    // cal_min\n    view.setFloat64(200, this.cal_min, this.littleEndian);\n\n    // slice_duration\n    view.setFloat64(208, this.slice_duration, this.littleEndian);\n\n    // toffset\n    view.setFloat64(216, this.toffset, this.littleEndian);\n\n    // slice_start\n    view.setBigInt64(224, BigInt(this.slice_start), this.littleEndian);\n\n    // slice end\n    view.setBigInt64(232, BigInt(this.slice_end), this.littleEndian);\n\n    // descrip\n    byteArray.set(Buffer.from(this.description), 240);\n\n    // aux_file\n    byteArray.set(Buffer.from(this.aux_file), 320);\n\n    // qform_code\n    view.setInt32(344, this.qform_code, this.littleEndian);\n\n    // sform_code\n    view.setInt32(348, this.sform_code, this.littleEndian);\n\n    // quatern_b\n    view.setFloat64(352, this.quatern_b, this.littleEndian);\n\n    // quatern_c\n    view.setFloat64(360, this.quatern_c, this.littleEndian);\n\n    // quatern_d\n    view.setFloat64(368, this.quatern_d, this.littleEndian);\n\n    // qoffset_x\n    view.setFloat64(376, this.qoffset_x, this.littleEndian);\n\n    // qoffset_y\n    view.setFloat64(384, this.qoffset_y, this.littleEndian);\n\n    // qoffset_z\n    view.setFloat64(392, this.qoffset_z, this.littleEndian);\n\n    // srow_x[4], srow_y[4], and srow_z[4]\n    const flattened = this.affine.flat();\n    // we only want the first three rows\n    for (let i = 0; i < 12; i++) {\n      view.setFloat64(400 + DOUBLE_SIZE * i, flattened[i], this.littleEndian);\n    }\n\n    // slice_code\n    view.setInt32(496, this.slice_code, this.littleEndian);\n    //  xyzt_units\n    view.setInt32(500, this.xyzt_units, this.littleEndian);\n    //  intent_code\n    view.setInt32(504, this.intent_code, this.littleEndian);\n    //  intent_name\n    byteArray.set(Buffer.from(this.intent_name), 508);\n    // dim_info\n    view.setUint8(524, this.dim_info);\n\n    // add our extension data\n    if (includeExtensions) {\n      byteArray.set(Uint8Array.from([1, 0, 0, 0]), 540);\n      let extensionByteIndex = this.getExtensionLocation();\n      for (const extension of this.extensions) {\n        view.setInt32(\n          extensionByteIndex,\n          extension.esize,\n          extension.littleEndian\n        );\n        view.setInt32(\n          extensionByteIndex + 4,\n          extension.ecode,\n          extension.littleEndian\n        );\n        byteArray.set(new Uint8Array(extension.edata), extensionByteIndex + 8);\n        extensionByteIndex += extension.esize;\n      }\n    } else {\n      // In a .nii file, these 4 bytes will always be present\n      byteArray.set(new Uint8Array(4).fill(0), 540);\n    }\n\n    return byteArray.buffer;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}