{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/components/Controls.jsx\";\nimport React from 'react';\nimport { Grid, Button } from '@mui/material';\nimport Title from './Title';\nimport RotationSliders from './RotationSliders';\nimport TranslationControl from './TranslationControl';\nimport SampleDetectorFields from './SampleDetectorFields';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Controls = ({\n  rotation,\n  setRotation,\n  tilt,\n  setTilt,\n  translation,\n  setTranslation,\n  randomize,\n  setRandomize\n}) => {\n  const handleSubmit = () => {\n    const params = {\n      rotation,\n      tilt,\n      translation,\n      randomize\n    };\n\n    // Convert params to JSON\n    const json = JSON.stringify(params, null, 2);\n\n    // Create a Blob with the JSON content\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n\n    // Create a link element and simulate a click to download the file\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'parameters.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controls\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          title: \"Rotation & Tilt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RotationSliders, {\n          rotation: rotation,\n          setRotation: setRotation,\n          tilt: tilt,\n          setTilt: setTilt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          title: \"Translation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TranslationControl, {\n          translation: translation,\n          setTranslation: setTranslation,\n          randomize: randomize,\n          setRandomize: setRandomize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SampleDetectorFields, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        justifyContent: \"center\",\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = Controls;\nexport default Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["React","Grid","Button","Title","RotationSliders","TranslationControl","SampleDetectorFields","jsxDEV","_jsxDEV","Controls","rotation","setRotation","tilt","setTilt","translation","setTranslation","randomize","setRandomize","handleSubmit","params","json","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","className","children","container","spacing","item","xs","title","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","mt","variant","color","onClick","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/components/Controls.jsx"],"sourcesContent":["import React from 'react';\nimport { Grid, Button } from '@mui/material';\nimport Title from './Title';\nimport RotationSliders from './RotationSliders';\nimport TranslationControl from './TranslationControl';\nimport SampleDetectorFields from './SampleDetectorFields';\n\nconst Controls = ({\n  rotation,\n  setRotation,\n  tilt,\n  setTilt,\n  translation,\n  setTranslation,\n  randomize,\n  setRandomize,\n}) => {\n  const handleSubmit = () => {\n    const params = {\n      rotation,\n      tilt,\n      translation,\n      randomize,\n    };\n\n    // Convert params to JSON\n    const json = JSON.stringify(params, null, 2);\n\n    // Create a Blob with the JSON content\n    const blob = new Blob([json], { type: 'application/json' });\n\n    // Create a link element and simulate a click to download the file\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'parameters.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  return (\n    <div className='controls'>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Title title='Rotation & Tilt' />\n          <RotationSliders\n            rotation={rotation}\n            setRotation={setRotation}\n            tilt={tilt}\n            setTilt={setTilt}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Title title='Translation' />\n          <TranslationControl\n            translation={translation}\n            setTranslation={setTranslation}\n            randomize={randomize}\n            setRandomize={setRandomize}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <SampleDetectorFields />\n        </Grid>\n        <Grid item xs={12} container justifyContent='center' mt={2}>\n          <Button variant='contained' color='primary' onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Controls;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}