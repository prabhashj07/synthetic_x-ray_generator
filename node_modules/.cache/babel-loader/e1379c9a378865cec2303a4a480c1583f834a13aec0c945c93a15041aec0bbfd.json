{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ThreeJS from './ThreeJS';\nimport './App.css';\nimport Controls from './components/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [rotation, setRotation] = useState(0);\n  const [tilt, setTilt] = useState(0);\n  const [translation, setTranslation] = useState({\n    pushPull: 0,\n    raiseLower: 0,\n    footHead: 0\n  });\n  const [randomize, setRandomize] = useState(false);\n  const [file, setFile] = useState(null);\n\n  // Effect to randomize translation values when randomize is toggled\n  useEffect(() => {\n    if (randomize) {\n      const randomTranslation = {\n        pushPull: Math.random() * 10 - 5,\n        // Random value between -5 and 5\n        raiseLower: Math.random() * 10 - 5,\n        // Random value between -5 and 5\n        footHead: Math.random() * 10 - 5 // Random value between -5 and 5\n      };\n      setTranslation(randomTranslation);\n      console.log(\"Randomized translation:\", randomTranslation);\n    }\n  }, [randomize]);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      console.log(\"File selected:\", selectedFile.name);\n      setFile(selectedFile);\n    } else {\n      console.log(\"No file selected\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      rotation: rotation,\n      setRotation: setRotation,\n      tilt: tilt,\n      setTilt: setTilt,\n      translation: translation,\n      setTranslation: setTranslation,\n      randomize: randomize,\n      setRandomize: setRandomize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(ThreeJS, {\n        rotation: rotation,\n        tilt: tilt,\n        translation: translation,\n        file: file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".nii,.nii.gz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"+2m8T34LRPt6TkceJJvnSl2pTOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThreeJS","Controls","jsxDEV","_jsxDEV","App","_s","rotation","setRotation","tilt","setTilt","translation","setTranslation","pushPull","raiseLower","footHead","randomize","setRandomize","file","setFile","randomTranslation","Math","random","console","log","handleFileChange","event","selectedFile","target","files","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ThreeJS from './ThreeJS';\nimport './App.css';\nimport Controls from './components/Controls';\n\nconst App = () => {\n    const [rotation, setRotation] = useState(0);\n    const [tilt, setTilt] = useState(0);\n    const [translation, setTranslation] = useState({\n        pushPull: 0,\n        raiseLower: 0,\n        footHead: 0,\n    });\n    const [randomize, setRandomize] = useState(false);\n    const [file, setFile] = useState(null);\n\n    // Effect to randomize translation values when randomize is toggled\n    useEffect(() => {\n        if (randomize) {\n            const randomTranslation = {\n                pushPull: Math.random() * 10 - 5,  // Random value between -5 and 5\n                raiseLower: Math.random() * 10 - 5, // Random value between -5 and 5\n                footHead: Math.random() * 10 - 5,   // Random value between -5 and 5\n            };\n            setTranslation(randomTranslation);\n            console.log(\"Randomized translation:\", randomTranslation);\n        }\n    }, [randomize]);\n\n    const handleFileChange = (event) => {\n        const selectedFile = event.target.files[0];\n        if (selectedFile) {\n            console.log(\"File selected:\", selectedFile.name);\n            setFile(selectedFile);\n        } else {\n            console.log(\"No file selected\");\n        }\n    };\n\n    return (\n        <div className='container'>\n            <Controls\n                rotation={rotation}\n                setRotation={setRotation}\n                tilt={tilt}\n                setTilt={setTilt}\n                translation={translation}\n                setTranslation={setTranslation}\n                randomize={randomize}\n                setRandomize={setRandomize}\n            />\n            <div className='canvas-container'>\n                <ThreeJS\n                    rotation={rotation}\n                    tilt={tilt}\n                    translation={translation}\n                    file={file}\n                />\n                <input \n                    type=\"file\" \n                    onChange={handleFileChange} \n                    accept=\".nii,.nii.gz\" \n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}