{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/prabhashj07/synthetic_x-ray_generator/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NIFTIEXTENSION = void 0;\n/*** Constructor ***/\n/**\n * The NIFTIEXTENSION constructor.\n * @constructor\n * @property {number} esize - number of bytes that form the extended header data\n * @property {number} ecode - developer group id\n * @property {ArrayBuffer} data - extension data\n * @property {boolean} littleEndian - is little endian\n * @type {Function}\n */\nclass NIFTIEXTENSION {\n  constructor(esize, ecode, edata, littleEndian) {\n    _defineProperty(this, \"esize\", void 0);\n    _defineProperty(this, \"ecode\", void 0);\n    _defineProperty(this, \"edata\", void 0);\n    _defineProperty(this, \"littleEndian\", void 0);\n    if (esize % 16 != 0) {\n      throw new Error(\"This does not appear to be a NIFTI extension\");\n    }\n    this.esize = esize;\n    this.ecode = ecode;\n    this.edata = edata;\n    this.littleEndian = littleEndian;\n  }\n  /**\n   * Returns extension as ArrayBuffer.\n   * @returns {ArrayBuffer}\n   */\n  toArrayBuffer() {\n    let byteArray = new Uint8Array(this.esize);\n    let data = new Uint8Array(this.edata);\n    byteArray.set(data, 8);\n    let view = new DataView(byteArray.buffer);\n    // size of extension\n    view.setInt32(0, this.esize, this.littleEndian);\n    view.setInt32(4, this.ecode, this.littleEndian);\n    return byteArray.buffer;\n  }\n}\nexports.NIFTIEXTENSION = NIFTIEXTENSION;","map":{"version":3,"names":["NIFTIEXTENSION","constructor","esize","ecode","edata","littleEndian","_defineProperty","Error","toArrayBuffer","byteArray","Uint8Array","data","set","view","DataView","buffer","setInt32","exports"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/node_modules/nifti-reader-js/src/nifti-extension.ts"],"sourcesContent":["/*** Constructor ***/\n/**\n * The NIFTIEXTENSION constructor.\n * @constructor\n * @property {number} esize - number of bytes that form the extended header data\n * @property {number} ecode - developer group id\n * @property {ArrayBuffer} data - extension data\n * @property {boolean} littleEndian - is little endian\n * @type {Function}\n */\nexport class NIFTIEXTENSION {\n    esize: number;\n    ecode: number;\n    edata: ArrayBuffer;\n    littleEndian: boolean;\n  \n    constructor(\n      esize: number,\n      ecode: number,\n      edata: ArrayBuffer,\n      littleEndian: boolean\n    ) {\n      if (esize % 16 != 0) {\n        throw new Error(\"This does not appear to be a NIFTI extension\");\n      }\n      this.esize = esize;\n      this.ecode = ecode;\n      this.edata = edata;\n      this.littleEndian = littleEndian;\n    }\n  \n    /**\n     * Returns extension as ArrayBuffer.\n     * @returns {ArrayBuffer}\n     */\n    toArrayBuffer() {\n      let byteArray = new Uint8Array(this.esize);\n      let data = new Uint8Array(this.edata);\n      byteArray.set(data, 8);\n  \n      let view = new DataView(byteArray.buffer);\n  \n      // size of extension\n      view.setInt32(0, this.esize, this.littleEndian);\n      view.setInt32(4, this.ecode, this.littleEndian);\n  \n      return byteArray.buffer;\n    }\n  }"],"mappings":";;;;;;;AAAA;AACA;;;;;;;;;AASA,MAAaA,cAAc;EAMvBC,YACEC,KAAa,EACbC,KAAa,EACbC,KAAkB,EAClBC,YAAqB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAErB,IAAIJ,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE;MACnB,MAAM,IAAIK,KAAK,CAAC,8CAA8C,CAAC;;IAEjE,IAAI,CAACL,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEA;;;;EAIAG,aAAaA,CAAA;IACX,IAAIC,SAAS,GAAG,IAAIC,UAAU,CAAC,IAAI,CAACR,KAAK,CAAC;IAC1C,IAAIS,IAAI,GAAG,IAAID,UAAU,CAAC,IAAI,CAACN,KAAK,CAAC;IACrCK,SAAS,CAACG,GAAG,CAACD,IAAI,EAAE,CAAC,CAAC;IAEtB,IAAIE,IAAI,GAAG,IAAIC,QAAQ,CAACL,SAAS,CAACM,MAAM,CAAC;IAEzC;IACAF,IAAI,CAACG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACd,KAAK,EAAE,IAAI,CAACG,YAAY,CAAC;IAC/CQ,IAAI,CAACG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACb,KAAK,EAAE,IAAI,CAACE,YAAY,CAAC;IAE/C,OAAOI,SAAS,CAACM,MAAM;EACzB;;AArCJE,OAAA,CAAAjB,cAAA,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}