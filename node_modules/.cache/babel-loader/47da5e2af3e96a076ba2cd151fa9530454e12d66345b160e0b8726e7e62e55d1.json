{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport nifti from 'nifti-reader-js';\nimport { VoxelMesh } from 'three-voxel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJS = ({\n  rotation,\n  tilt,\n  translation\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 50;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const loadNiftiFile = url => {\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.arrayBuffer();\n      }).then(buffer => {\n        const niftiHeader = nifti.readHeader(new Uint8Array(buffer));\n        const niftiData = nifti.readImage(niftiHeader, new Uint8Array(buffer));\n        const width = niftiHeader.dims[1];\n        const height = niftiHeader.dims[2];\n        const depth = niftiHeader.dims[3];\n        console.log('NIfTI Dimensions:', {\n          width,\n          height,\n          depth\n        });\n        const voxelMesh = new VoxelMesh(niftiData, {\n          width,\n          height,\n          depth,\n          voxelSize: 1,\n          color: 0xff0000\n        });\n        scene.add(voxelMesh);\n        const animate = () => {\n          requestAnimationFrame(animate);\n          voxelMesh.rotation.y = rotation;\n          voxelMesh.rotation.x = tilt;\n          renderer.render(scene, camera);\n        };\n        animate();\n      }).catch(error => console.error('Error loading NIfTI file:', error));\n    };\n    loadNiftiFile('./CT_Abdo.nii.gz'); // Ensure the path is correct\n\n    const mountElement = mountRef.current;\n    return () => {\n      if (mountElement) {\n        mountElement.removeChild(renderer.domElement);\n      }\n    };\n  }, [rotation, tilt, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeJS, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeJS;\nexport default ThreeJS;\nvar _c;\n$RefreshReg$(_c, \"ThreeJS\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","nifti","VoxelMesh","jsxDEV","_jsxDEV","ThreeJS","rotation","tilt","translation","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","current","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","setSize","appendChild","domElement","loadNiftiFile","url","fetch","then","response","ok","Error","arrayBuffer","buffer","niftiHeader","readHeader","Uint8Array","niftiData","readImage","width","dims","height","depth","console","log","voxelMesh","voxelSize","color","add","animate","requestAnimationFrame","y","x","render","catch","error","mountElement","removeChild","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport nifti from 'nifti-reader-js';\nimport { VoxelMesh } from 'three-voxel';\n\nconst ThreeJS = ({ rotation, tilt, translation }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 50;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    const loadNiftiFile = (url) => {\n      fetch(url)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.arrayBuffer();\n        })\n        .then(buffer => {\n          const niftiHeader = nifti.readHeader(new Uint8Array(buffer));\n          const niftiData = nifti.readImage(niftiHeader, new Uint8Array(buffer));\n\n          const width = niftiHeader.dims[1];\n          const height = niftiHeader.dims[2];\n          const depth = niftiHeader.dims[3];\n\n          console.log('NIfTI Dimensions:', { width, height, depth });\n\n          const voxelMesh = new VoxelMesh(niftiData, {\n            width,\n            height,\n            depth,\n            voxelSize: 1,\n            color: 0xff0000,\n          });\n\n          scene.add(voxelMesh);\n\n          const animate = () => {\n            requestAnimationFrame(animate);\n\n            voxelMesh.rotation.y = rotation;\n            voxelMesh.rotation.x = tilt;\n\n            renderer.render(scene, camera);\n          };\n\n          animate();\n        })\n        .catch(error => console.error('Error loading NIfTI file:', error));\n    };\n\n    loadNiftiFile('./CT_Abdo.nii.gz'); // Ensure the path is correct\n\n    const mountElement = mountRef.current;\n\n    return () => {\n      if (mountElement) {\n        mountElement.removeChild(renderer.domElement);\n      }\n    };\n  }, [rotation, tilt, translation]);\n\n  return <div ref={mountRef} style={{ width: '100%', height: '100%' }}></div>;\n};\n\nexport default ThreeJS;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}