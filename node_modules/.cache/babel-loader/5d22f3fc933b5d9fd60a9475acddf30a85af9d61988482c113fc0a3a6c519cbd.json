{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as nifti from 'nifti-reader-js';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJS = ({\n  rotation,\n  tilt,\n  translation,\n  file\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  const [niftiHeader, setNiftiHeader] = useState(null);\n  const [niftiImage, setNiftiImage] = useState(null);\n  const [slice, setSlice] = useState(0);\n  const readNIFTI = useCallback(data => {\n    try {\n      if (nifti.isCompressed(data)) {\n        data = nifti.decompress(data);\n      }\n      if (nifti.isNIFTI(data)) {\n        const header = nifti.readHeader(data);\n        const image = nifti.readImage(header, data);\n        setNiftiHeader(header);\n        setNiftiImage(image);\n        const slices = header.dims[3];\n        setSlice(Math.floor(slices / 2));\n      } else {\n        console.error(\"Not a valid NIFTI file\");\n      }\n    } catch (error) {\n      console.error(\"Error reading NIFTI file:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const arrayBuffer = e.target.result;\n        readNIFTI(arrayBuffer);\n      };\n      reader.onerror = e => {\n        console.error(\"Error reading file:\", e);\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  }, [file, readNIFTI]);\n  useEffect(() => {\n    if (!niftiHeader || !niftiImage || !mountRef.current) return;\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Convert NIFTI slice to a texture\n    const texture = new THREE.DataTexture(new Uint8Array(niftiImage), niftiHeader.dims[1], niftiHeader.dims[2], THREE.LuminanceFormat);\n    texture.needsUpdate = true;\n    const geometry = new THREE.PlaneGeometry(2, 2);\n    const material = new THREE.MeshBasicMaterial({\n      map: texture\n    });\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n    camera.position.z = 5;\n    const controls = new OrbitControls(camera, renderer.domElement);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      plane.rotation.x = rotation;\n      plane.rotation.y = tilt;\n      plane.position.x = translation.pushPull;\n      plane.position.y = translation.raiseLower;\n      plane.position.z = translation.footHead;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    const mountNode = mountRef.current;\n    return () => {\n      if (mountNode) {\n        mountNode.removeChild(renderer.domElement);\n      }\n      geometry.dispose();\n      material.dispose();\n      renderer.dispose();\n    };\n  }, [niftiHeader, niftiImage, rotation, tilt, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100%',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), niftiHeader && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: niftiHeader.dims[3] - 1,\n      value: slice,\n      onChange: e => setSlice(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File loaded: \", file ? file.name : 'No file']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Slice: \", slice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Image dimensions: \", niftiHeader ? `${niftiHeader.dims[1]}x${niftiHeader.dims[2]}x${niftiHeader.dims[3]}` : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreeJS, \"u3+yF1WDHww7gGyLcRXV70Rov50=\");\n_c = ThreeJS;\nexport default ThreeJS;\nvar _c;\n$RefreshReg$(_c, \"ThreeJS\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","nifti","THREE","OrbitControls","jsxDEV","_jsxDEV","ThreeJS","rotation","tilt","translation","file","_s","mountRef","niftiHeader","setNiftiHeader","niftiImage","setNiftiImage","slice","setSlice","readNIFTI","data","isCompressed","decompress","isNIFTI","header","readHeader","image","readImage","slices","dims","Math","floor","console","error","reader","FileReader","onload","e","arrayBuffer","target","result","onerror","readAsArrayBuffer","current","width","clientWidth","height","clientHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","appendChild","domElement","texture","DataTexture","Uint8Array","LuminanceFormat","needsUpdate","geometry","PlaneGeometry","material","MeshBasicMaterial","map","plane","Mesh","add","position","z","controls","animate","requestAnimationFrame","x","y","pushPull","raiseLower","footHead","update","render","mountNode","removeChild","dispose","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","parseInt","name","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as nifti from 'nifti-reader-js';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeJS = ({ rotation, tilt, translation, file }) => {\n    const mountRef = useRef(null);\n    const [niftiHeader, setNiftiHeader] = useState(null);\n    const [niftiImage, setNiftiImage] = useState(null);\n    const [slice, setSlice] = useState(0);\n\n    const readNIFTI = useCallback((data) => {\n        try {\n            if (nifti.isCompressed(data)) {\n                data = nifti.decompress(data);\n            }\n\n            if (nifti.isNIFTI(data)) {\n                const header = nifti.readHeader(data);\n                const image = nifti.readImage(header, data);\n\n                setNiftiHeader(header);\n                setNiftiImage(image);\n\n                const slices = header.dims[3];\n                setSlice(Math.floor(slices / 2));\n            } else {\n                console.error(\"Not a valid NIFTI file\");\n            }\n        } catch (error) {\n            console.error(\"Error reading NIFTI file:\", error);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const arrayBuffer = e.target.result;\n                readNIFTI(arrayBuffer);\n            };\n            reader.onerror = (e) => {\n                console.error(\"Error reading file:\", e);\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    }, [file, readNIFTI]);\n\n    useEffect(() => {\n        if (!niftiHeader || !niftiImage || !mountRef.current) return;\n\n        const width = mountRef.current.clientWidth;\n        const height = mountRef.current.clientHeight;\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setSize(width, height);\n        mountRef.current.appendChild(renderer.domElement);\n\n        // Convert NIFTI slice to a texture\n        const texture = new THREE.DataTexture(new Uint8Array(niftiImage), niftiHeader.dims[1], niftiHeader.dims[2], THREE.LuminanceFormat);\n        texture.needsUpdate = true;\n\n        const geometry = new THREE.PlaneGeometry(2, 2);\n        const material = new THREE.MeshBasicMaterial({ map: texture });\n        const plane = new THREE.Mesh(geometry, material);\n        scene.add(plane);\n\n        camera.position.z = 5;\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            plane.rotation.x = rotation;\n            plane.rotation.y = tilt;\n            plane.position.x = translation.pushPull;\n            plane.position.y = translation.raiseLower;\n            plane.position.z = translation.footHead;\n            controls.update();\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        const mountNode = mountRef.current;\n\n        return () => {\n            if (mountNode) {\n                mountNode.removeChild(renderer.domElement);\n            }\n            geometry.dispose();\n            material.dispose();\n            renderer.dispose();\n        };\n    }, [niftiHeader, niftiImage, rotation, tilt, translation]);\n\n    return (\n        <div>\n            <div ref={mountRef} style={{ width: '100%', height: '400px' }}></div>\n            {niftiHeader && (\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max={niftiHeader.dims[3] - 1}\n                    value={slice}\n                    onChange={(e) => setSlice(parseInt(e.target.value))}\n                />\n            )}\n            <p>File loaded: {file ? file.name : 'No file'}</p>\n            <p>Slice: {slice}</p>\n            <p>Image dimensions: {niftiHeader ? `${niftiHeader.dims[1]}x${niftiHeader.dims[2]}x${niftiHeader.dims[3]}` : 'N/A'}</p>\n        </div>\n    );\n};\n\nexport default ThreeJS;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}