{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { NIfTILoader } from 'three-nifti-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJS = ({\n  rotation,\n  tilt,\n  translation\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const loader = new NIfTILoader();\n    loader.load('CT_AVM.nii.gz', volume => {\n      const geometry = new THREE.BoxGeometry(volume.header.dims[1], volume.header.dims[2], volume.header.dims[3]);\n      const texture = new THREE.DataTexture3D(volume.data, volume.header.dims[1], volume.header.dims[2], volume.header.dims[3]);\n      texture.format = THREE.RedFormat;\n      texture.type = THREE.UnsignedByteType;\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        opacity: 0.5\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      const animate = () => {\n        requestAnimationFrame(animate);\n        mesh.rotation.y = rotation;\n        mesh.rotation.x = tilt;\n        mesh.position.x = translation.pushPull;\n        mesh.position.y = translation.raiseLower;\n        mesh.position.z = translation.footHead;\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [rotation, tilt, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeJS, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeJS;\nexport default ThreeJS;\nvar _c;\n$RefreshReg$(_c, \"ThreeJS\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","NIfTILoader","jsxDEV","_jsxDEV","ThreeJS","rotation","tilt","translation","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","current","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","setSize","appendChild","domElement","loader","load","volume","geometry","BoxGeometry","header","dims","texture","DataTexture3D","data","format","RedFormat","type","UnsignedByteType","material","MeshBasicMaterial","map","transparent","opacity","mesh","Mesh","add","animate","requestAnimationFrame","y","x","pushPull","raiseLower","footHead","render","removeChild","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { NIfTILoader } from 'three-nifti-loader';\n\nconst ThreeJS = ({ rotation, tilt, translation }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    const loader = new NIfTILoader();\n    loader.load('CT_AVM.nii.gz', (volume) => {\n      const geometry = new THREE.BoxGeometry(volume.header.dims[1], volume.header.dims[2], volume.header.dims[3]);\n      const texture = new THREE.DataTexture3D(volume.data, volume.header.dims[1], volume.header.dims[2], volume.header.dims[3]);\n      texture.format = THREE.RedFormat;\n      texture.type = THREE.UnsignedByteType;\n\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        opacity: 0.5,\n      });\n\n      const mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n\n        mesh.rotation.y = rotation;\n        mesh.rotation.x = tilt;\n\n        mesh.position.x = translation.pushPull;\n        mesh.position.y = translation.raiseLower;\n        mesh.position.z = translation.footHead;\n\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [rotation, tilt, translation]);\n\n  return <div ref={mountRef} style={{ width: '100%', height: '100%' }}></div>;\n};\n\nexport default ThreeJS;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}