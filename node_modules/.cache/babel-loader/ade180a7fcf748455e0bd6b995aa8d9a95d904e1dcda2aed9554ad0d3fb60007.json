{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport nifti from 'nifti-reader-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJS = ({\n  rotation,\n  tilt,\n  translation\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Load the NIfTI file\n    const loadNiftiFile = url => {\n      fetch(url).then(response => response.arrayBuffer()).then(buffer => {\n        const niftiHeader = nifti.readHeader(new Uint8Array(buffer));\n        const niftiData = nifti.readImage(niftiHeader, new Uint8Array(buffer));\n        const geometry = new THREE.BoxGeometry(niftiHeader.dims[1], niftiHeader.dims[2], niftiHeader.dims[3]);\n        const texture = new THREE.DataTexture3D(niftiData, niftiHeader.dims[1], niftiHeader.dims[2], niftiHeader.dims[3]);\n        texture.format = THREE.RedFormat;\n        texture.type = THREE.UnsignedByteType;\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          transparent: true,\n          opacity: 0.5\n        });\n        const mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n        const animate = () => {\n          requestAnimationFrame(animate);\n          mesh.rotation.y = rotation;\n          mesh.rotation.x = tilt;\n          mesh.position.x = translation.pushPull;\n          mesh.position.y = translation.raiseLower;\n          mesh.position.z = translation.footHead;\n          renderer.render(scene, camera);\n        };\n        animate();\n      }).catch(error => console.error('Error loading NIfTI file:', error));\n    };\n    loadNiftiFile('CT_AVM.nii.gz');\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [rotation, tilt, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeJS, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeJS;\nexport default ThreeJS;\nvar _c;\n$RefreshReg$(_c, \"ThreeJS\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","nifti","jsxDEV","_jsxDEV","ThreeJS","rotation","tilt","translation","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","current","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","setSize","appendChild","domElement","loadNiftiFile","url","fetch","then","response","arrayBuffer","buffer","niftiHeader","readHeader","Uint8Array","niftiData","readImage","geometry","BoxGeometry","dims","texture","DataTexture3D","format","RedFormat","type","UnsignedByteType","material","MeshBasicMaterial","map","transparent","opacity","mesh","Mesh","add","animate","requestAnimationFrame","y","x","pushPull","raiseLower","footHead","render","catch","error","console","removeChild","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport nifti from 'nifti-reader-js';\n\nconst ThreeJS = ({ rotation, tilt, translation }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xeeeeee);\n\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Load the NIfTI file\n    const loadNiftiFile = (url) => {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => {\n          const niftiHeader = nifti.readHeader(new Uint8Array(buffer));\n          const niftiData = nifti.readImage(niftiHeader, new Uint8Array(buffer));\n\n          const geometry = new THREE.BoxGeometry(niftiHeader.dims[1], niftiHeader.dims[2], niftiHeader.dims[3]);\n          const texture = new THREE.DataTexture3D(niftiData, niftiHeader.dims[1], niftiHeader.dims[2], niftiHeader.dims[3]);\n          texture.format = THREE.RedFormat;\n          texture.type = THREE.UnsignedByteType;\n\n          const material = new THREE.MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            opacity: 0.5,\n          });\n\n          const mesh = new THREE.Mesh(geometry, material);\n          scene.add(mesh);\n\n          const animate = () => {\n            requestAnimationFrame(animate);\n\n            mesh.rotation.y = rotation;\n            mesh.rotation.x = tilt;\n\n            mesh.position.x = translation.pushPull;\n            mesh.position.y = translation.raiseLower;\n            mesh.position.z = translation.footHead;\n\n            renderer.render(scene, camera);\n          };\n\n          animate();\n        })\n        .catch(error => console.error('Error loading NIfTI file:', error));\n    };\n\n    loadNiftiFile('CT_AVM.nii.gz');\n\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [rotation, tilt, translation]);\n\n  return <div ref={mountRef} style={{ width: '100%', height: '100%' }}></div>;\n};\n\nexport default ThreeJS;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}