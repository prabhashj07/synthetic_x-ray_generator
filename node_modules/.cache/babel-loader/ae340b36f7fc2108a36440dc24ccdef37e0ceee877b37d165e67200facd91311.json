{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/components/SampleDetectorFields.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, TextField, Box, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SampleDetectorFields = () => {\n  _s();\n  const [numSamples, setNumSamples] = useState(10);\n  const [sourceToDetector, setSourceToDetector] = useState(100);\n  const [detectorDiameter, setDetectorDiameter] = useState(50);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          display: 'inline'\n        },\n        children: \"Sample Detector Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Number of Samples\",\n          type: \"number\",\n          value: numSamples,\n          onChange: e => setNumSamples(Number(e.target.value)),\n          fullWidth: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Source to Detector Distance\",\n          type: \"number\",\n          value: sourceToDetector,\n          onChange: e => setSourceToDetector(Number(e.target.value)),\n          fullWidth: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Detector Diameter\",\n          type: \"number\",\n          value: detectorDiameter,\n          onChange: e => setDetectorDiameter(Number(e.target.value)),\n          fullWidth: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SampleDetectorFields, \"YzfXJfucFhQc8wp9MA7fo+cduTI=\");\n_c = SampleDetectorFields;\nexport default SampleDetectorFields;\nvar _c;\n$RefreshReg$(_c, \"SampleDetectorFields\");","map":{"version":3,"names":["Grid","TextField","Box","Typography","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SampleDetectorFields","_s","numSamples","setNumSamples","sourceToDetector","setSourceToDetector","detectorDiameter","setDetectorDiameter","children","sx","mb","variant","component","display","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","label","type","value","onChange","e","Number","target","fullWidth","size","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/components/SampleDetectorFields.jsx"],"sourcesContent":["import { Grid, TextField, Box, Typography } from '@mui/material';\nimport { useState } from 'react';\n\nconst SampleDetectorFields = () => {\n  const [numSamples, setNumSamples] = useState(10);\n  const [sourceToDetector, setSourceToDetector] = useState(100);\n  const [detectorDiameter, setDetectorDiameter] = useState(50);\n\n  return (\n    <>\n      <Box sx={{ mb: 2 }}>\n        <Typography\n          variant='h6'\n          component='div'\n          sx={{ display: 'inline' }}\n        >\n          Sample Detector Settings\n        </Typography>\n      </Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            label='Number of Samples'\n            type='number'\n            value={numSamples}\n            onChange={(e) => setNumSamples(Number(e.target.value))}\n            fullWidth\n            size='small'\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label='Source to Detector Distance'\n            type='number'\n            value={sourceToDetector}\n            onChange={(e) => setSourceToDetector(Number(e.target.value))}\n            fullWidth\n            size='small'\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label='Detector Diameter'\n            type='number'\n            value={detectorDiameter}\n            onChange={(e) => setDetectorDiameter(Number(e.target.value))}\n            fullWidth\n            size='small'\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default SampleDetectorFields;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}