{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/components/RotationSliders.jsx\";\nimport React from 'react';\nimport { CircleSlider } from 'react-circle-slider';\nimport { Grid, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotationSliders = ({\n  rotation,\n  setRotation,\n  tilt,\n  setTilt\n}) => {\n  const handleRotationChange = value => {\n    setRotation((value - 180) * (Math.PI / 180));\n  };\n  const handleTiltChange = value => {\n    setTilt((value - 180) * (Math.PI / 180));\n  };\n\n  // Convert radians to degrees and adjust range from -180 to 180\n  const rotationDegrees = Math.round(rotation * (180 / Math.PI));\n  const tiltDegrees = Math.round(tilt * (180 / Math.PI));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(CircleSlider, {\n        value: Math.round((rotation + Math.PI) * (180 / Math.PI)),\n        onChange: handleRotationChange,\n        size: 120 // Increased slider size\n        ,\n        knobRadius: 15,\n        circleWidth: 12,\n        progressWidth: 12,\n        stepSize: 1,\n        min: 0,\n        max: 360,\n        className: \"circle-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          children: \"Rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          align: \"center\",\n          children: [rotationDegrees, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(CircleSlider, {\n        value: Math.round((tilt + Math.PI) * (180 / Math.PI)),\n        onChange: handleTiltChange,\n        size: 120 // Increased slider size\n        ,\n        knobRadius: 15,\n        circleWidth: 12,\n        progressWidth: 12,\n        stepSize: 1,\n        min: 0,\n        max: 360,\n        className: \"circle-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          children: \"Tilt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          align: \"center\",\n          children: [tiltDegrees, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = RotationSliders;\nexport default RotationSliders;\nvar _c;\n$RefreshReg$(_c, \"RotationSliders\");","map":{"version":3,"names":["React","CircleSlider","Grid","Typography","Box","jsxDEV","_jsxDEV","RotationSliders","rotation","setRotation","tilt","setTilt","handleRotationChange","value","Math","PI","handleTiltChange","rotationDegrees","round","tiltDegrees","container","spacing","alignItems","justifyContent","children","item","xs","direction","onChange","size","knobRadius","circleWidth","progressWidth","stepSize","min","max","className","fileName","_jsxFileName","lineNumber","columnNumber","mt","variant","align","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/components/RotationSliders.jsx"],"sourcesContent":["import React from 'react';\nimport { CircleSlider } from 'react-circle-slider';\nimport { Grid, Typography, Box } from '@mui/material';\n\nconst RotationSliders = ({ rotation, setRotation, tilt, setTilt }) => {\n  const handleRotationChange = (value) => {\n    setRotation((value - 180) * (Math.PI / 180));\n  };\n\n  const handleTiltChange = (value) => {\n    setTilt((value - 180) * (Math.PI / 180));\n  };\n\n  // Convert radians to degrees and adjust range from -180 to 180\n  const rotationDegrees = Math.round((rotation * (180 / Math.PI)));\n  const tiltDegrees = Math.round((tilt * (180 / Math.PI)));\n\n  return (\n    <Grid container spacing={3} alignItems='center' justifyContent='center'>\n      <Grid item xs={6} container direction='column' alignItems='center'>\n        <CircleSlider\n          value={Math.round((rotation + Math.PI) * (180 / Math.PI))}\n          onChange={handleRotationChange}\n          size={120} // Increased slider size\n          knobRadius={15}\n          circleWidth={12}\n          progressWidth={12}\n          stepSize={1}\n          min={0}\n          max={360}\n          className='circle-slider'\n        />\n        <Box mt={1}>\n          <Typography variant='body1' align='center'>\n            Rotation\n          </Typography>\n          <Typography variant='body2' align='center'>\n            {rotationDegrees}°\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={6} container direction='column' alignItems='center'>\n        <CircleSlider\n          value={Math.round((tilt + Math.PI) * (180 / Math.PI))}\n          onChange={handleTiltChange}\n          size={120} // Increased slider size\n          knobRadius={15}\n          circleWidth={12}\n          progressWidth={12}\n          stepSize={1}\n          min={0}\n          max={360}\n          className='circle-slider'\n        />\n        <Box mt={1}>\n          <Typography variant='body1' align='center'>\n            Tilt\n          </Typography>\n          <Typography variant='body2' align='center'>\n            {tiltDegrees}°\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RotationSliders;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}