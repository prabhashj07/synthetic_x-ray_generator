{"ast":null,"code":"var _jsxFileName = \"/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as nifti from 'nifti-reader-js';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeJS = ({\n  rotation,\n  tilt,\n  translation,\n  file\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  const [niftiHeader, setNiftiHeader] = useState(null);\n  const [niftiImage, setNiftiImage] = useState(null);\n  const [slice, setSlice] = useState(0);\n  const readNIFTI = useCallback(data => {\n    console.log(\"Attempting to read NIFTI data\");\n    try {\n      if (nifti.isCompressed(data)) {\n        console.log(\"Data is compressed, decompressing...\");\n        data = nifti.decompress(data);\n      }\n      if (nifti.isNIFTI(data)) {\n        console.log(\"Valid NIFTI data found\");\n        const header = nifti.readHeader(data);\n        const image = nifti.readImage(header, data);\n        console.log(\"Header:\", header);\n        console.log(\"Image data length:\", image.length);\n        setNiftiHeader(header);\n        setNiftiImage(image);\n        const slices = header.dims[3];\n        setSlice(Math.floor(slices / 2));\n      } else {\n        console.error(\"Not a valid NIFTI file\");\n      }\n    } catch (error) {\n      console.error(\"Error reading NIFTI file:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    if (file) {\n      console.log(\"File received in ThreeJS component:\", file.name);\n      const reader = new FileReader();\n      reader.onload = e => {\n        console.log(\"File loaded, calling readNIFTI\");\n        const arrayBuffer = e.target.result;\n        readNIFTI(arrayBuffer);\n      };\n      reader.onerror = e => {\n        console.error(\"Error reading file:\", e);\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  }, [file, readNIFTI]);\n  useEffect(() => {\n    if (!niftiHeader || !niftiImage || !mountRef.current) return;\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Convert NIFTI image to THREE.DataTexture\n    const sliceIndex = slice * niftiHeader.dims[1] * niftiHeader.dims[2];\n    const sliceData = new Uint8Array(niftiImage.buffer, sliceIndex, niftiHeader.dims[1] * niftiHeader.dims[2]);\n    const texture = new THREE.DataTexture(sliceData, niftiHeader.dims[1], niftiHeader.dims[2], THREE.LuminanceFormat);\n    texture.needsUpdate = true;\n    const geometry = new THREE.PlaneGeometry(2, 2);\n    const material = new THREE.MeshBasicMaterial({\n      map: texture\n    });\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n    camera.position.z = 5;\n    const controls = new OrbitControls(camera, renderer.domElement);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    const mountNode = mountRef.current;\n    return () => {\n      if (mountNode) {\n        mountNode.removeChild(renderer.domElement);\n      }\n      geometry.dispose();\n      material.dispose();\n      renderer.dispose();\n    };\n  }, [niftiHeader, niftiImage, slice, rotation, tilt, translation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreeJS, \"u3+yF1WDHww7gGyLcRXV70Rov50=\");\n_c = ThreeJS;\nexport default ThreeJS;\nvar _c;\n$RefreshReg$(_c, \"ThreeJS\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","nifti","THREE","OrbitControls","jsxDEV","_jsxDEV","ThreeJS","rotation","tilt","translation","file","_s","mountRef","niftiHeader","setNiftiHeader","niftiImage","setNiftiImage","slice","setSlice","readNIFTI","data","console","log","isCompressed","decompress","isNIFTI","header","readHeader","image","readImage","length","slices","dims","Math","floor","error","name","reader","FileReader","onload","e","arrayBuffer","target","result","onerror","readAsArrayBuffer","current","width","clientWidth","height","clientHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","appendChild","domElement","sliceIndex","sliceData","Uint8Array","buffer","texture","DataTexture","LuminanceFormat","needsUpdate","geometry","PlaneGeometry","material","MeshBasicMaterial","map","plane","Mesh","add","position","z","controls","animate","requestAnimationFrame","update","render","mountNode","removeChild","dispose","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/src/ThreeJS.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as nifti from 'nifti-reader-js';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst ThreeJS = ({ rotation, tilt, translation, file }) => {\n    const mountRef = useRef(null);\n    const [niftiHeader, setNiftiHeader] = useState(null);\n    const [niftiImage, setNiftiImage] = useState(null);\n    const [slice, setSlice] = useState(0);\n\n    const readNIFTI = useCallback((data) => {\n        console.log(\"Attempting to read NIFTI data\");\n        try {\n            if (nifti.isCompressed(data)) {\n                console.log(\"Data is compressed, decompressing...\");\n                data = nifti.decompress(data);\n            }\n\n            if (nifti.isNIFTI(data)) {\n                console.log(\"Valid NIFTI data found\");\n                const header = nifti.readHeader(data);\n                const image = nifti.readImage(header, data);\n\n                console.log(\"Header:\", header);\n                console.log(\"Image data length:\", image.length);\n\n                setNiftiHeader(header);\n                setNiftiImage(image);\n\n                const slices = header.dims[3];\n                setSlice(Math.floor(slices / 2));\n            } else {\n                console.error(\"Not a valid NIFTI file\");\n            }\n        } catch (error) {\n            console.error(\"Error reading NIFTI file:\", error);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (file) {\n            console.log(\"File received in ThreeJS component:\", file.name);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                console.log(\"File loaded, calling readNIFTI\");\n                const arrayBuffer = e.target.result;\n                readNIFTI(arrayBuffer);\n            };\n            reader.onerror = (e) => {\n                console.error(\"Error reading file:\", e);\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    }, [file, readNIFTI]);\n\n    useEffect(() => {\n        if (!niftiHeader || !niftiImage || !mountRef.current) return;\n\n        const width = mountRef.current.clientWidth;\n        const height = mountRef.current.clientHeight;\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer();\n\n        renderer.setSize(width, height);\n        mountRef.current.appendChild(renderer.domElement);\n\n        // Convert NIFTI image to THREE.DataTexture\n        const sliceIndex = slice * niftiHeader.dims[1] * niftiHeader.dims[2];\n        const sliceData = new Uint8Array(niftiImage.buffer, sliceIndex, niftiHeader.dims[1] * niftiHeader.dims[2]);\n\n        const texture = new THREE.DataTexture(sliceData, niftiHeader.dims[1], niftiHeader.dims[2], THREE.LuminanceFormat);\n        texture.needsUpdate = true;\n\n        const geometry = new THREE.PlaneGeometry(2, 2);\n        const material = new THREE.MeshBasicMaterial({ map: texture });\n        const plane = new THREE.Mesh(geometry, material);\n        scene.add(plane);\n\n        camera.position.z = 5;\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        const mountNode = mountRef.current;\n\n        return () => {\n            if (mountNode) {\n                mountNode.removeChild(renderer.domElement);\n            }\n            geometry.dispose();\n            material.dispose();\n            renderer.dispose();\n        };\n    }, [niftiHeader, niftiImage, slice, rotation, tilt, translation]);\n\n    return (\n        <div ref={mountRef} style={{ width: '100%', height: '400px' }}></div>\n    );\n};\n\nexport default ThreeJS;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}