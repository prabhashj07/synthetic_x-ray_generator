{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readExtensionData = exports.readExtension = exports.readImage = exports.hasExtension = exports.readHeader = exports.decompress = exports.isCompressed = exports.isNIFTI = exports.isNIFTI2 = exports.isNIFTI1 = exports.NIFTIEXTENSION = exports.Utils = exports.NIFTI2 = exports.NIFTI1 = void 0;\nconst fflate = __importStar(require(\"fflate\"));\nconst nifti1_1 = require(\"./nifti1\");\nconst nifti2_1 = require(\"./nifti2\");\nconst utilities_1 = require(\"./utilities\");\nvar nifti1_2 = require(\"./nifti1\");\nObject.defineProperty(exports, \"NIFTI1\", {\n  enumerable: true,\n  get: function () {\n    return nifti1_2.NIFTI1;\n  }\n});\nvar nifti2_2 = require(\"./nifti2\");\nObject.defineProperty(exports, \"NIFTI2\", {\n  enumerable: true,\n  get: function () {\n    return nifti2_2.NIFTI2;\n  }\n});\nvar utilities_2 = require(\"./utilities\");\nObject.defineProperty(exports, \"Utils\", {\n  enumerable: true,\n  get: function () {\n    return utilities_2.Utils;\n  }\n});\nvar nifti_extension_1 = require(\"./nifti-extension\");\nObject.defineProperty(exports, \"NIFTIEXTENSION\", {\n  enumerable: true,\n  get: function () {\n    return nifti_extension_1.NIFTIEXTENSION;\n  }\n});\n/*** Static Methods ***/\n/**\n * Returns true if this data represents a NIFTI-1 header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nfunction isNIFTI1(data) {\n  let isHdrImgPairOK = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var buf, mag1, mag2, mag3;\n  if (data.byteLength < nifti1_1.NIFTI1.STANDARD_HEADER_SIZE) {\n    return false;\n  }\n  buf = new DataView(data);\n  if (buf) mag1 = buf.getUint8(nifti1_1.NIFTI1.MAGIC_NUMBER_LOCATION);\n  mag2 = buf.getUint8(nifti1_1.NIFTI1.MAGIC_NUMBER_LOCATION + 1);\n  mag3 = buf.getUint8(nifti1_1.NIFTI1.MAGIC_NUMBER_LOCATION + 2);\n  if (isHdrImgPairOK && mag1 === nifti1_1.NIFTI1.MAGIC_NUMBER2[0] && mag2 === nifti1_1.NIFTI1.MAGIC_NUMBER2[1] && mag3 === nifti1_1.NIFTI1.MAGIC_NUMBER2[2]) return true; // hdr/img pair\n  return !!(mag1 === nifti1_1.NIFTI1.MAGIC_NUMBER[0] && mag2 === nifti1_1.NIFTI1.MAGIC_NUMBER[1] && mag3 === nifti1_1.NIFTI1.MAGIC_NUMBER[2]);\n}\nexports.isNIFTI1 = isNIFTI1;\n/**\n * Returns true if this data represents a NIFTI-2 header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nfunction isNIFTI2(data) {\n  let isHdrImgPairOK = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var buf, mag1, mag2, mag3;\n  if (data.byteLength < nifti1_1.NIFTI1.STANDARD_HEADER_SIZE) {\n    return false;\n  }\n  buf = new DataView(data);\n  mag1 = buf.getUint8(nifti2_1.NIFTI2.MAGIC_NUMBER_LOCATION);\n  mag2 = buf.getUint8(nifti2_1.NIFTI2.MAGIC_NUMBER_LOCATION + 1);\n  mag3 = buf.getUint8(nifti2_1.NIFTI2.MAGIC_NUMBER_LOCATION + 2);\n  if (isHdrImgPairOK && mag1 === nifti2_1.NIFTI2.MAGIC_NUMBER2[0] && mag2 === nifti2_1.NIFTI2.MAGIC_NUMBER2[1] && mag3 === nifti2_1.NIFTI2.MAGIC_NUMBER2[2]) return true; // hdr/img pair\n  return !!(mag1 === nifti2_1.NIFTI2.MAGIC_NUMBER[0] && mag2 === nifti2_1.NIFTI2.MAGIC_NUMBER[1] && mag3 === nifti2_1.NIFTI2.MAGIC_NUMBER[2]);\n}\nexports.isNIFTI2 = isNIFTI2;\n/**\n * Returns true if this data represents a NIFTI header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nfunction isNIFTI(data) {\n  let isHdrImgPairOK = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isNIFTI1(data, isHdrImgPairOK) || isNIFTI2(data, isHdrImgPairOK);\n}\nexports.isNIFTI = isNIFTI;\n/**\n * Returns true if this data is GZIP compressed.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nfunction isCompressed(data) {\n  var buf, magicCookie1, magicCookie2;\n  if (data) {\n    buf = new DataView(data);\n    magicCookie1 = buf.getUint8(0);\n    magicCookie2 = buf.getUint8(1);\n    if (magicCookie1 === utilities_1.Utils.GUNZIP_MAGIC_COOKIE1) {\n      return true;\n    }\n    if (magicCookie2 === utilities_1.Utils.GUNZIP_MAGIC_COOKIE2) {\n      return true;\n    }\n  }\n  return false;\n}\nexports.isCompressed = isCompressed;\n/**\n * Returns decompressed data.\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nfunction decompress(data) {\n  return fflate.decompressSync(new Uint8Array(data)).buffer;\n}\nexports.decompress = decompress;\n/**\n * Reads and returns the header object.\n * @param {ArrayBuffer} data\n * @returns {NIFTI1|NIFTI2|null}\n */\nfunction readHeader(data) {\n  let isHdrImgPairOK = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var header = null;\n  if (isCompressed(data)) {\n    data = decompress(data);\n  }\n  if (isNIFTI1(data, isHdrImgPairOK)) {\n    header = new nifti1_1.NIFTI1();\n  } else if (isNIFTI2(data, isHdrImgPairOK)) {\n    header = new nifti2_1.NIFTI2();\n  }\n  if (header) {\n    header.readHeader(data);\n  } else {\n    console.error(\"That file does not appear to be NIFTI!\");\n  }\n  return header;\n}\nexports.readHeader = readHeader;\n/**\n * Returns true if this header contains an extension.\n * @param {NIFTI1|NIFTI2} header\n * @returns {boolean}\n */\nfunction hasExtension(header) {\n  return header.extensionFlag[0] != 0;\n}\nexports.hasExtension = hasExtension;\n/**\n * Returns the image data.\n * @param {NIFTI1|NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nfunction readImage(header, data) {\n  var imageOffset = header.vox_offset,\n    timeDim = 1,\n    statDim = 1;\n  if (header.dims[4]) {\n    timeDim = header.dims[4];\n  }\n  if (header.dims[5]) {\n    statDim = header.dims[5];\n  }\n  var imageSize = header.dims[1] * header.dims[2] * header.dims[3] * timeDim * statDim * (header.numBitsPerVoxel / 8);\n  return data.slice(imageOffset, imageOffset + imageSize);\n}\nexports.readImage = readImage;\n/**\n * Returns the extension data (including extension header).\n * @param {NIFTI1|NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nfunction readExtension(header, data) {\n  var loc = header.getExtensionLocation(),\n    size = header.extensionSize;\n  return data.slice(loc, loc + size);\n}\nexports.readExtension = readExtension;\n/**\n * Returns the extension data.\n * @param {NIFTI1|NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nfunction readExtensionData(header, data) {\n  var loc = header.getExtensionLocation(),\n    size = header.extensionSize;\n  return data.slice(loc + 8, loc + size); // +8 for loc and -8 for esize and ecode\n}\nexports.readExtensionData = readExtensionData;","map":{"version":3,"names":["fflate","__importStar","require","nifti1_1","nifti2_1","utilities_1","nifti1_2","Object","defineProperty","exports","enumerable","get","NIFTI1","nifti2_2","NIFTI2","utilities_2","Utils","nifti_extension_1","NIFTIEXTENSION","isNIFTI1","data","isHdrImgPairOK","arguments","length","undefined","buf","mag1","mag2","mag3","byteLength","STANDARD_HEADER_SIZE","DataView","getUint8","MAGIC_NUMBER_LOCATION","MAGIC_NUMBER2","MAGIC_NUMBER","isNIFTI2","isNIFTI","isCompressed","magicCookie1","magicCookie2","GUNZIP_MAGIC_COOKIE1","GUNZIP_MAGIC_COOKIE2","decompress","decompressSync","Uint8Array","buffer","readHeader","header","console","error","hasExtension","extensionFlag","readImage","imageOffset","vox_offset","timeDim","statDim","dims","imageSize","numBitsPerVoxel","slice","readExtension","loc","getExtensionLocation","size","extensionSize","readExtensionData"],"sources":["/home/prabhashj07/synthetic_x-ray_generator/node_modules/nifti-reader-js/src/nifti.ts"],"sourcesContent":["import * as fflate from \"fflate\";\nimport { NIFTI1 } from \"./nifti1\";\nimport { NIFTI2 } from \"./nifti2\";\nimport { Utils } from \"./utilities\";\nexport { NIFTI1 } from \"./nifti1\";\nexport { NIFTI2 } from \"./nifti2\";\nexport { Utils } from \"./utilities\";\nexport { NIFTIEXTENSION } from \"./nifti-extension\";\n\n  /*** Static Methods ***/    \n  /**\n   * Returns true if this data represents a NIFTI-1 header.\n   * @param {ArrayBuffer} data\n   * @returns {boolean}\n   */\n  export function isNIFTI1(data: ArrayBuffer, isHdrImgPairOK = false) {\n    var buf, mag1, mag2, mag3;\n    \n    if (data.byteLength < NIFTI1.STANDARD_HEADER_SIZE) {\n      return false;\n    }\n\n    buf = new DataView(data);\n\n    if (buf) mag1 = buf.getUint8(NIFTI1.MAGIC_NUMBER_LOCATION);\n    mag2 = buf.getUint8(NIFTI1.MAGIC_NUMBER_LOCATION + 1);\n    mag3 = buf.getUint8(NIFTI1.MAGIC_NUMBER_LOCATION + 2);\n\n    if (\n      isHdrImgPairOK &&\n      mag1 === NIFTI1.MAGIC_NUMBER2[0] &&\n      mag2 === NIFTI1.MAGIC_NUMBER2[1] &&\n      mag3 === NIFTI1.MAGIC_NUMBER2[2]\n    )\n      return true; // hdr/img pair\n\n    return !!(\n      mag1 === NIFTI1.MAGIC_NUMBER[0] &&\n      mag2 === NIFTI1.MAGIC_NUMBER[1] &&\n      mag3 === NIFTI1.MAGIC_NUMBER[2]\n    );\n  }\n\n  /**\n   * Returns true if this data represents a NIFTI-2 header.\n   * @param {ArrayBuffer} data\n   * @returns {boolean}\n   */\n  export function isNIFTI2(data: ArrayBuffer, isHdrImgPairOK = false) {\n    var buf, mag1, mag2, mag3;\n\n    if (data.byteLength < NIFTI1.STANDARD_HEADER_SIZE) {\n      return false;\n    }\n\n    buf = new DataView(data);\n    mag1 = buf.getUint8(NIFTI2.MAGIC_NUMBER_LOCATION);\n    mag2 = buf.getUint8(NIFTI2.MAGIC_NUMBER_LOCATION + 1);\n    mag3 = buf.getUint8(NIFTI2.MAGIC_NUMBER_LOCATION + 2);\n\n    if (\n      isHdrImgPairOK &&\n      mag1 === NIFTI2.MAGIC_NUMBER2[0] &&\n      mag2 === NIFTI2.MAGIC_NUMBER2[1] &&\n      mag3 === NIFTI2.MAGIC_NUMBER2[2]\n    )\n      return true; // hdr/img pair\n\n    return !!(\n      mag1 === NIFTI2.MAGIC_NUMBER[0] &&\n      mag2 === NIFTI2.MAGIC_NUMBER[1] &&\n      mag3 === NIFTI2.MAGIC_NUMBER[2]\n    );\n  }\n\n  /**\n   * Returns true if this data represents a NIFTI header.\n   * @param {ArrayBuffer} data\n   * @returns {boolean}\n   */\n  export function isNIFTI(data: ArrayBuffer, isHdrImgPairOK = false) {\n    return (\n      isNIFTI1(data, isHdrImgPairOK) ||\n      isNIFTI2(data, isHdrImgPairOK)\n    );\n  }\n\n  /**\n   * Returns true if this data is GZIP compressed.\n   * @param {ArrayBuffer} data\n   * @returns {boolean}\n   */\n  export function isCompressed(data: ArrayBuffer) {\n    var buf, magicCookie1, magicCookie2;\n\n    if (data) {\n      buf = new DataView(data);\n\n      magicCookie1 = buf.getUint8(0);\n      magicCookie2 = buf.getUint8(1);\n\n      if (magicCookie1 === Utils.GUNZIP_MAGIC_COOKIE1) {\n        return true;\n      }\n\n      if (magicCookie2 === Utils.GUNZIP_MAGIC_COOKIE2) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns decompressed data.\n   * @param {ArrayBuffer} data\n   * @returns {ArrayBuffer}\n   */\n  export function decompress(data: ArrayBuffer) {\n    return fflate.decompressSync(new Uint8Array(data)).buffer;\n  }\n\n  /**\n   * Reads and returns the header object.\n   * @param {ArrayBuffer} data\n   * @returns {NIFTI1|NIFTI2|null}\n   */\n  export function readHeader(data: ArrayBuffer, isHdrImgPairOK = false) {\n    var header = null;\n\n    if (isCompressed(data)) {\n      data = decompress(data);\n    }\n\n    if (isNIFTI1(data, isHdrImgPairOK)) {\n      header = new NIFTI1();\n    } else if (isNIFTI2(data, isHdrImgPairOK)) {\n      header = new NIFTI2();\n    }\n\n    if (header) {\n      header.readHeader(data);\n    } else {\n      console.error(\"That file does not appear to be NIFTI!\");\n    }\n\n    return header;\n  }\n\n  /**\n   * Returns true if this header contains an extension.\n   * @param {NIFTI1|NIFTI2} header\n   * @returns {boolean}\n   */\n  export function hasExtension(header: NIFTI1 | NIFTI2) {\n    return header.extensionFlag[0] != 0;\n  }\n\n  /**\n   * Returns the image data.\n   * @param {NIFTI1|NIFTI2} header\n   * @param {ArrayBuffer} data\n   * @returns {ArrayBuffer}\n   */\n  export function readImage(\n    header: NIFTI1 | NIFTI2,\n    data: ArrayBuffer\n  ) {\n    var imageOffset = header.vox_offset,\n      timeDim = 1,\n      statDim = 1;\n\n    if (header.dims[4]) {\n      timeDim = header.dims[4];\n    }\n\n    if (header.dims[5]) {\n      statDim = header.dims[5];\n    }\n\n    var imageSize =\n      header.dims[1] *\n      header.dims[2] *\n      header.dims[3] *\n      timeDim *\n      statDim *\n      (header.numBitsPerVoxel / 8);\n    return data.slice(imageOffset, imageOffset + imageSize);\n  }\n\n  /**\n   * Returns the extension data (including extension header).\n   * @param {NIFTI1|NIFTI2} header\n   * @param {ArrayBuffer} data\n   * @returns {ArrayBuffer}\n   */\n  export function readExtension(\n    header: NIFTI1 | NIFTI2,\n    data: ArrayBuffer\n  ) {\n    var loc = header.getExtensionLocation(),\n      size = header.extensionSize;\n\n    return data.slice(loc, loc + size);\n  }\n\n  /**\n   * Returns the extension data.\n   * @param {NIFTI1|NIFTI2} header\n   * @param {ArrayBuffer} data\n   * @returns {ArrayBuffer}\n   */\n  export function readExtensionData(\n    header: NIFTI1 | NIFTI2,\n    data: ArrayBuffer\n  ) {\n    var loc = header.getExtensionLocation(),\n      size = header.extensionSize;\n\n    return data.slice(loc + 8, loc + size); // +8 for loc and -8 for esize and ecode\n  }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}